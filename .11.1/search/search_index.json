{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"An NPC / Citizen-like mod for Fabric / Forge modloader. Fabric: Forge: Installation Getting started","title":""},{"location":"dev_support/","text":"Donations Do you want to further support the development of Taterzens mod? You can donate here . Thank you so much! Server renting Taterzens is sponsored by ApexHosting . You can rent a server there and support the development that way.","title":"Support Development"},{"location":"dev_support/#donations","text":"Do you want to further support the development of Taterzens mod? You can donate here . Thank you so much!","title":"Donations"},{"location":"dev_support/#server-renting","text":"Taterzens is sponsored by ApexHosting . You can rent a server there and support the development that way.","title":"Server renting"},{"location":"help/","text":"Help Discord If you have any further questions or suggestions, you can join my Discord","title":"Discord"},{"location":"help/#help","text":"","title":"Help"},{"location":"help/#discord","text":"If you have any further questions or suggestions, you can join my Discord","title":"Discord"},{"location":"readme/","text":"Taterzen docs Built with mkdocs-material . Contributing As I'm developing the mod, I'm often lazy and don't care about docs configurations, commands etc. are self-understandable to me. But as a user, you might feel lost in the Taterzen command tree. Do you feel like some parts of docs can be improved? Rephrased? Are there annoying typos? Feel free to fork the project and improve the docs. Install mkdocs Submit a PR and let everyone have a better experience understanding the mod. Thank you so much!","title":"Taterzen docs"},{"location":"readme/#taterzen-docs","text":"Built with mkdocs-material .","title":"Taterzen docs"},{"location":"readme/#contributing","text":"As I'm developing the mod, I'm often lazy and don't care about docs configurations, commands etc. are self-understandable to me. But as a user, you might feel lost in the Taterzen command tree. Do you feel like some parts of docs can be improved? Rephrased? Are there annoying typos? Feel free to fork the project and improve the docs. Install mkdocs Submit a PR and let everyone have a better experience understanding the mod. Thank you so much!","title":"Contributing"},{"location":"support/","text":"Issues Make sure you have installed the latest version Taterzens installed. Get the logs from .minecraft/logs/latest.log and crash reports (if crash occured) .minecraft/crash-reports/crash<date>.txt . Open a GitHub issue containing all the needed mentioned information. How do I achieve <xyz>? Docs are a great place to start looking for features. You even have a search function up there :). You can also join the discord for further information. Someone might already had a similar issue, so you can try searching for it using discord's builtin search. If you need more information, don't be afraid to ask ;)! (just make sure to use the right channel)","title":"Issues"},{"location":"support/#issues","text":"Make sure you have installed the latest version Taterzens installed. Get the logs from .minecraft/logs/latest.log and crash reports (if crash occured) .minecraft/crash-reports/crash<date>.txt . Open a GitHub issue containing all the needed mentioned information.","title":"Issues"},{"location":"support/#how-do-i-achieve-xyz","text":"Docs are a great place to start looking for features. You even have a search function up there :). You can also join the discord for further information. Someone might already had a similar issue, so you can try searching for it using discord's builtin search. If you need more information, don't be afraid to ask ;)! (just make sure to use the right channel)","title":"How do I achieve &lt;xyz&gt;?"},{"location":"developers/code_docs/","text":"Javadoc Dokadoc Fresh new docs styled by JetBrains If you'd like to see what's happening behind the scenes, you can find javadoc dokadoc on the following pages: (latest release) latest snapshot Choose other version: async function gotoDocs(select) { const url = select.value; if (url) { console.log(\"https://samolego.github.io/Taterzens/dokka/v\" + url); window.location.href = \"https://samolego.github.io/Taterzens/dokka/v\" + url; } } const xhttp = new XMLHttpRequest(); xhttp.onreadystatechange = function() { if (this.readyState == 4 && this.status == 200) { const data = JSON.parse(xhttp.responseText); const selector = document.getElementById(\"versions\"); const latest = data[0].tag_name; document.getElementById(\"release\").href = \"https://samolego.github.io/Taterzens/dokka/v\" + latest; const current = document.getElementById(\"releaseName\").innerHTML; document.getElementById(\"releaseName\").innerHTML = \"v\" + latest + \" \"+ current; for (let i = 0; i < data.length; i++) { const release = data[i]; const version = document.createElement(\"option\"); const tagName = release.tag_name; if (tagName === \"1.7.0\") { // Docs only exist for 1.7.1 and up return; } version.value = tagName; version.innerHTML = tagName; versions.append(version); } } }; xhttp.open(\"GET\", \"https://api.github.com/repos/samolego/Taterzens/releases\", true); xhttp.send();","title":"Code Documentation"},{"location":"developers/code_docs/#javadoc-dokadoc","text":"","title":"Javadoc Dokadoc"},{"location":"developers/code_docs/#fresh-new-docs-styled-by-jetbrains","text":"If you'd like to see what's happening behind the scenes, you can find javadoc dokadoc on the following pages: (latest release) latest snapshot Choose other version: async function gotoDocs(select) { const url = select.value; if (url) { console.log(\"https://samolego.github.io/Taterzens/dokka/v\" + url); window.location.href = \"https://samolego.github.io/Taterzens/dokka/v\" + url; } } const xhttp = new XMLHttpRequest(); xhttp.onreadystatechange = function() { if (this.readyState == 4 && this.status == 200) { const data = JSON.parse(xhttp.responseText); const selector = document.getElementById(\"versions\"); const latest = data[0].tag_name; document.getElementById(\"release\").href = \"https://samolego.github.io/Taterzens/dokka/v\" + latest; const current = document.getElementById(\"releaseName\").innerHTML; document.getElementById(\"releaseName\").innerHTML = \"v\" + latest + \" \"+ current; for (let i = 0; i < data.length; i++) { const release = data[i]; const version = document.createElement(\"option\"); const tagName = release.tag_name; if (tagName === \"1.7.0\") { // Docs only exist for 1.7.1 and up return; } version.value = tagName; version.innerHTML = tagName; versions.append(version); } } }; xhttp.open(\"GET\", \"https://api.github.com/repos/samolego/Taterzens/releases\", true); xhttp.send();","title":"Fresh new docs styled by JetBrains"},{"location":"developers/professions/","text":"Using code to maximize potential What is Taterzen Profession API? Profession API allows you to create a new profession for use with Taterzens mod. Each Taterzen can have as many professions as you want, but they might clash with each other.","title":"API"},{"location":"developers/professions/#using-code-to-maximize-potential","text":"","title":"Using code to maximize potential"},{"location":"developers/professions/#what-is-taterzen-profession-api","text":"Profession API allows you to create a new profession for use with Taterzens mod. Each Taterzen can have as many professions as you want, but they might clash with each other.","title":"What is Taterzen Profession API?"},{"location":"developers/professions/java/coding_professions/","text":"Hello world? Whether you are an experienced programmer or a beginner, you should (hopefully) be able to understand how to create a simple profession. A sample repository with the profession is available on GitHub . Creating your own profession class First off, create a class implementing TaterzenProfession interface (found in org.samo_lego.taterzens.api.professions ). Create a unique ResourceLocation for your profession as well, as we will need it later. import org.samo_lego.taterzens.npc.TaterzenNPC ; public class MyFirstProfession implements TaterzenProfession { public static final ResourceLocation ID = new ResourceLocation ( \"your_mod_id\" , \"my_profession\" ); } You will then need to implement the methods. If you don't want to change certain behaviours, just leave those empty. If you don't know what certain methods mean, you can always check out code docs . For methods using InteractionResult , your return variable can mean the following: InteractionResult#PASS - Default; continues ticking other professions. InteractionResult#CONSUME - Stops processing others, but continues with base Taterzen movement tick. InteractionResult#FAIL - Stops whole movement tick. InteractionResult#SUCCESS - Continues with super.tickMovement(), but skips Taterzen's movement tick. public class MyFirstProfession implements TaterzenProfession { public static final ResourceLocation ID = new ResourceLocation ( MODID , \"my_profession\" ); private final TaterzenNPC npc ; public MyFirstProfession ( TaterzenNPC npc ) { this . npc = npc ; } @Override public InteractionResult interactAt ( Player player , Vec3d pos , Hand hand ) { player . sendMessage ( Component . literal ( \"You have interacted with \" ). append ( this . npc . getName ()), false ); return InteractionResult . PASS ; } /** * Method used for creating the new profession for given taterzen. * * @param taterzen taterzen to create profession for * @return new profession object of taterzen. */ @Override public TaterzenProfession create ( TaterzenNPC taterzen ) { MyFirstProfession profession = new MyFirstProfession (); // Assigning the Taterzen to the profession so we can use it later. profession . npc = taterzen ; return profession ; } } Registering profession The last step you have to do is to register all your profession types. There's a method in TaterzensAPI class that you can use. import org.samo_lego.taterzens.api.TaterzensAPI ; import my.custom.package.MyFirstProfession ; public class MyProfessionsMod { public static final String MODID = \"my_professions_mod\" ; /** * Put this in initialisation method of your mod. * Those are different if you're using forge / fabric. */ public static void onInitialize () { // Profession registering TaterzensAPI . registerProfession ( MyFirstProfession . ID , MyFirstProfession :: new ); } }","title":"Coding Profession"},{"location":"developers/professions/java/coding_professions/#hello-world","text":"Whether you are an experienced programmer or a beginner, you should (hopefully) be able to understand how to create a simple profession. A sample repository with the profession is available on GitHub .","title":"Hello world?"},{"location":"developers/professions/java/coding_professions/#creating-your-own-profession-class","text":"First off, create a class implementing TaterzenProfession interface (found in org.samo_lego.taterzens.api.professions ). Create a unique ResourceLocation for your profession as well, as we will need it later. import org.samo_lego.taterzens.npc.TaterzenNPC ; public class MyFirstProfession implements TaterzenProfession { public static final ResourceLocation ID = new ResourceLocation ( \"your_mod_id\" , \"my_profession\" ); } You will then need to implement the methods. If you don't want to change certain behaviours, just leave those empty. If you don't know what certain methods mean, you can always check out code docs . For methods using InteractionResult , your return variable can mean the following: InteractionResult#PASS - Default; continues ticking other professions. InteractionResult#CONSUME - Stops processing others, but continues with base Taterzen movement tick. InteractionResult#FAIL - Stops whole movement tick. InteractionResult#SUCCESS - Continues with super.tickMovement(), but skips Taterzen's movement tick. public class MyFirstProfession implements TaterzenProfession { public static final ResourceLocation ID = new ResourceLocation ( MODID , \"my_profession\" ); private final TaterzenNPC npc ; public MyFirstProfession ( TaterzenNPC npc ) { this . npc = npc ; } @Override public InteractionResult interactAt ( Player player , Vec3d pos , Hand hand ) { player . sendMessage ( Component . literal ( \"You have interacted with \" ). append ( this . npc . getName ()), false ); return InteractionResult . PASS ; } /** * Method used for creating the new profession for given taterzen. * * @param taterzen taterzen to create profession for * @return new profession object of taterzen. */ @Override public TaterzenProfession create ( TaterzenNPC taterzen ) { MyFirstProfession profession = new MyFirstProfession (); // Assigning the Taterzen to the profession so we can use it later. profession . npc = taterzen ; return profession ; } }","title":"Creating your own profession class"},{"location":"developers/professions/java/coding_professions/#registering-profession","text":"The last step you have to do is to register all your profession types. There's a method in TaterzensAPI class that you can use. import org.samo_lego.taterzens.api.TaterzensAPI ; import my.custom.package.MyFirstProfession ; public class MyProfessionsMod { public static final String MODID = \"my_professions_mod\" ; /** * Put this in initialisation method of your mod. * Those are different if you're using forge / fabric. */ public static void onInitialize () { // Profession registering TaterzensAPI . registerProfession ( MyFirstProfession . ID , MyFirstProfession :: new ); } }","title":"Registering profession"},{"location":"developers/professions/java/profession_commands/","text":"Expanding profession abilities Once you have made your own profession, it's time to move on! You'd probably want it to be modifiable with commands. If you've worked with Mojang's Brigadier before, this shouldn't be a problem. Let's assume that we have created trader profession. We want to modify the payment item of our profession. TraderCommand.java public class TraderCommand { public static void register ( CommandDispatcher < CommandSourceStack > dispatcher , boolean dedicated ) { dispatcher . register ( literal ( \"trader\" ) . then ( literal ( \"changeCurrency\" ) . then ( argument ( \"currency item\" , ItemStackArgumentType . itemStack ()) . executes ( TraderCommand :: changeCurrency ) ) ) ); } private static int changeCurrency ( CommandContext < CommandSourceStack > context ) throws CommandSyntaxException { // Getting the selected Taterzen ServerPlayer player = context . getSource (). getPlayer (); TaterzenNPC npc = (( TaterzenEditor ) player ). getNpc (); if ( npc != null ) { // Getting the profession if NPC has it TraderProfession profession = npc . getProfession ( TraderProfession . ID ); if ( profession != null ) { ItemStack stack = ItemStackArgumentType . getItemStackArgument ( commandContext , \"currency item\" ); profession . editCurrency ( stack ); return 1 ; } // Otherwise send error player . sendMessage ( Component . literal ( \"This npc doesn't have trader profession :'( ...\" ), false ); } else player . sendMessage ( noSelectedTaterzenError (), false ); return 0 ; } } Make sure to register your command as well.","title":"Profession Commands"},{"location":"developers/professions/java/profession_commands/#expanding-profession-abilities","text":"Once you have made your own profession, it's time to move on! You'd probably want it to be modifiable with commands. If you've worked with Mojang's Brigadier before, this shouldn't be a problem. Let's assume that we have created trader profession. We want to modify the payment item of our profession. TraderCommand.java public class TraderCommand { public static void register ( CommandDispatcher < CommandSourceStack > dispatcher , boolean dedicated ) { dispatcher . register ( literal ( \"trader\" ) . then ( literal ( \"changeCurrency\" ) . then ( argument ( \"currency item\" , ItemStackArgumentType . itemStack ()) . executes ( TraderCommand :: changeCurrency ) ) ) ); } private static int changeCurrency ( CommandContext < CommandSourceStack > context ) throws CommandSyntaxException { // Getting the selected Taterzen ServerPlayer player = context . getSource (). getPlayer (); TaterzenNPC npc = (( TaterzenEditor ) player ). getNpc (); if ( npc != null ) { // Getting the profession if NPC has it TraderProfession profession = npc . getProfession ( TraderProfession . ID ); if ( profession != null ) { ItemStack stack = ItemStackArgumentType . getItemStackArgument ( commandContext , \"currency item\" ); profession . editCurrency ( stack ); return 1 ; } // Otherwise send error player . sendMessage ( Component . literal ( \"This npc doesn't have trader profession :'( ...\" ), false ); } else player . sendMessage ( noSelectedTaterzenError (), false ); return 0 ; } } Make sure to register your command as well.","title":"Expanding profession abilities"},{"location":"getting_started/","text":"Playing with Taterzens What is a Taterzen? It's a rather silly nickname for NPC, which stands for Non-Player-Character . It can be summoned with /npc create <name of the taterzen> . If you prefer using a GUI , just run /npc and navigate to create node. GUI navigation To use GUI , enter /npc command. Gui is created from command itself, therefore it has same child GUIs as commands. Inputs to GUI are handled via anvil GUI. to execute a node, right click the item in menu to go to child GUI, left click the item in menu (if there's no more child GUIs, left clicking will execute it as well.)","title":"Start"},{"location":"getting_started/#playing-with-taterzens","text":"","title":"Playing with Taterzens"},{"location":"getting_started/#what-is-a-taterzen","text":"It's a rather silly nickname for NPC, which stands for Non-Player-Character . It can be summoned with /npc create <name of the taterzen> . If you prefer using a GUI , just run /npc and navigate to create node.","title":"What is a Taterzen?"},{"location":"getting_started/#gui-navigation","text":"To use GUI , enter /npc command. Gui is created from command itself, therefore it has same child GUIs as commands. Inputs to GUI are handled via anvil GUI. to execute a node, right click the item in menu to go to child GUI, left click the item in menu (if there's no more child GUIs, left clicking will execute it as well.)","title":"GUI navigation"},{"location":"getting_started/actions/","text":"Taterzen actions Actions Taterzens can perform certain player-like actions. Currently those are: * interacting with blocks (aka \"right-clicking\") * going to block position Block interactions To make th Taterzen interact with certain block, you can use the following command /npc action interact <x> <y> <z> where x , y and z are block coordinates. Going to block position To make the Taterzen go to certain block, you can use the following command /npc action goto <x> <y> <z> where x , y and z are block coordinates.","title":"Actions"},{"location":"getting_started/actions/#taterzen-actions","text":"","title":"Taterzen actions"},{"location":"getting_started/actions/#actions","text":"Taterzens can perform certain player-like actions. Currently those are: * interacting with blocks (aka \"right-clicking\") * going to block position","title":"Actions"},{"location":"getting_started/actions/#block-interactions","text":"To make th Taterzen interact with certain block, you can use the following command /npc action interact <x> <y> <z> where x , y and z are block coordinates.","title":"Block interactions"},{"location":"getting_started/actions/#going-to-block-position","text":"To make the Taterzen go to certain block, you can use the following command /npc action goto <x> <y> <z> where x , y and z are block coordinates.","title":"Going to block position"},{"location":"getting_started/behaviour/","text":"Behaviour editing Changing the behaviour Getting UUID An easy way to get the uuid of a Taterzen is to have your crosshairs focused on the Taterzen when typing out the command. Then, you can use tab completion and the uuid will be suggested. Default Taterzen behaviour will be passive . It's up to you whether you dare to change it. If you use any other types than the default one, you'd probably want to change their invulnerable status as well. To achieve that, use /data merge entity <taterzen uuid> {Invulnerable:1b} 1b = true 0b = false Teaming them up Taterzen teams use the vanilla teams system. For extra docs on the team command, see the wiki . To create and add taterzens to a team, you can simply do /team add teamName /team join teamName <taterzen uuid> Taterzens will never attack another entity on the same team , but if you're not on their team, watch out! Hostile Behaviour It was a lovely day until I wrote /npc edit behaviour HOSTILE in chat. The NPC has started attacking all living entites. I had to run away, otherwise I'd be its next prey. Don't make the same mistake. I don't even know why I told you the above line ... Defensive Behaviour The defensive mechanism will make Taterzen target the mob that attacked it. /npc edit behaviour DEFENSIVE Friendly behaviour Taterzens with friendly behaviour will target any monsters that dare to come around. /npc edit behaviour FRIENDLY Passive behaviour If you have problems with Taterzen being too aggressive, use /npc edit behaviour PASSIVE It will calm down the selected one.","title":"Changing Behaviour"},{"location":"getting_started/behaviour/#behaviour-editing","text":"","title":"Behaviour editing"},{"location":"getting_started/behaviour/#changing-the-behaviour","text":"Getting UUID An easy way to get the uuid of a Taterzen is to have your crosshairs focused on the Taterzen when typing out the command. Then, you can use tab completion and the uuid will be suggested. Default Taterzen behaviour will be passive . It's up to you whether you dare to change it. If you use any other types than the default one, you'd probably want to change their invulnerable status as well. To achieve that, use /data merge entity <taterzen uuid> {Invulnerable:1b} 1b = true 0b = false","title":"Changing the behaviour"},{"location":"getting_started/behaviour/#teaming-them-up","text":"Taterzen teams use the vanilla teams system. For extra docs on the team command, see the wiki . To create and add taterzens to a team, you can simply do /team add teamName /team join teamName <taterzen uuid> Taterzens will never attack another entity on the same team , but if you're not on their team, watch out!","title":"Teaming them up"},{"location":"getting_started/behaviour/#hostile-behaviour","text":"It was a lovely day until I wrote /npc edit behaviour HOSTILE in chat. The NPC has started attacking all living entites. I had to run away, otherwise I'd be its next prey. Don't make the same mistake. I don't even know why I told you the above line ...","title":"Hostile Behaviour"},{"location":"getting_started/behaviour/#defensive-behaviour","text":"The defensive mechanism will make Taterzen target the mob that attacked it. /npc edit behaviour DEFENSIVE","title":"Defensive Behaviour"},{"location":"getting_started/behaviour/#friendly-behaviour","text":"Taterzens with friendly behaviour will target any monsters that dare to come around. /npc edit behaviour FRIENDLY","title":"Friendly behaviour"},{"location":"getting_started/behaviour/#passive-behaviour","text":"If you have problems with Taterzen being too aggressive, use /npc edit behaviour PASSIVE It will calm down the selected one.","title":"Passive behaviour"},{"location":"getting_started/equipment/","text":"Equiping Taterzens Gear 'em up! Running /npc edit equipment will put you in equipment editor mode. You now have have the following options * Right click NPC to equip them the item you're holding * Punch it to swap its hand items * Shift-right-click to put a piece equipment * Shift-right-click with empty hand clear equipment If you want them to drop equipment on death (not removal ), run /npc edit equipment allowEquipmentDrops true","title":"Equipment"},{"location":"getting_started/equipment/#equiping-taterzens","text":"","title":"Equiping Taterzens"},{"location":"getting_started/equipment/#gear-em-up","text":"Running /npc edit equipment will put you in equipment editor mode. You now have have the following options * Right click NPC to equip them the item you're holding * Punch it to swap its hand items * Shift-right-click to put a piece equipment * Shift-right-click with empty hand clear equipment If you want them to drop equipment on death (not removal ), run /npc edit equipment allowEquipmentDrops true","title":"Gear 'em up!"},{"location":"getting_started/locking/","text":"Owning taterzens Defaults Every taterzen is locked to a specific player after being created. To disable this behavior, edit the config . /taterzens config edit lockAfterCreation false Why is it useful? You might need a taterzen with command-permission-level set to 4 , as you want it to be able to execute all commands . But you also want all your players to have their own taterzens and be able to edit them. This could mean that someone could edit your taterzen and add a /stop command to it, making it stop the server every time when right clicked upon. Unlocking To make taterzen editable for everyone (with permission), use the below command. /npc unlock Locking back If you change you mind, you can lock the taterzen again with the below command. /npc lock","title":"Locking"},{"location":"getting_started/locking/#owning-taterzens","text":"","title":"Owning taterzens"},{"location":"getting_started/locking/#defaults","text":"Every taterzen is locked to a specific player after being created. To disable this behavior, edit the config . /taterzens config edit lockAfterCreation false","title":"Defaults"},{"location":"getting_started/locking/#why-is-it-useful","text":"You might need a taterzen with command-permission-level set to 4 , as you want it to be able to execute all commands . But you also want all your players to have their own taterzens and be able to edit them. This could mean that someone could edit your taterzen and add a /stop command to it, making it stop the server every time when right clicked upon.","title":"Why is it useful?"},{"location":"getting_started/locking/#unlocking","text":"To make taterzen editable for everyone (with permission), use the below command. /npc unlock","title":"Unlocking"},{"location":"getting_started/locking/#locking-back","text":"If you change you mind, you can lock the taterzen again with the below command. /npc lock","title":"Locking back"},{"location":"getting_started/messages/","text":"Messages Make them speak! Taterzens are simple creatures; you enter their message editor and they will remember things you send in chat. You can edit those messages later or even delete them, if you don't like them anymore. /npc edit messages list will show you all the messages of selected Taterzen. Chat editing Adding new messages to Taterzen Running /npc edit messages will send you this: You've entered message editor for Taterzen . Enter same command to exit. Send messages in chat and Taterzen will repeat them. You can use normal text or tellraw structure (for colors). That means that any messages you send to chat will be redirected to Taterzen's to-say list instead. I want colored messages! No problem, Taterzens mod has you covered! It supports tellraw json text format as well. Generate any tellraw command with the text you want. There are online tools that can do it, I recommend using MCStacker . /tellraw @p {\"text\":\"Discord invite!\",\"color\":\"gold\",\"bold\":true,\"italic\":true,\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://discord.gg/9PAesuHFnp\"}} This would send a following-like text: Discord invite! Copy all text from first { all the way to the end. {\"text\":\"Discord invite!\",\"color\":\"gold\",\"bold\":true,\"italic\":true,\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://discord.gg/9PAesuHFnp\"}} Send it in chat and NPC will parse it. Chat GUI And then? The NPC will send those messages to any player in range, with a certain delay. It can be changed in config, look for the messageDelay option. Editing messages Oh no, I've made a typo! How do I fix it? Check the message id by running /npc edit messages list Taterzen Taterzen has the following messages. Click on one to edit it. 1-> Discord invite! X 2-> Second message. X 3-> Yet another message ... X Click on the message you'd like to edit or run /npc edit messages <id> Type the new message in chat and send it. Deleting messages Simply run /npc edit messages <id> delete to delete the message with id <id> . Or click the X next to the message when listing them. To clear all the messages, run /npc edit messages clear","title":"Messages"},{"location":"getting_started/messages/#messages","text":"","title":"Messages"},{"location":"getting_started/messages/#make-them-speak","text":"Taterzens are simple creatures; you enter their message editor and they will remember things you send in chat. You can edit those messages later or even delete them, if you don't like them anymore. /npc edit messages list will show you all the messages of selected Taterzen.","title":"Make them speak!"},{"location":"getting_started/messages/#chat-editing","text":"","title":"Chat editing"},{"location":"getting_started/messages/#adding-new-messages-to-taterzen","text":"Running /npc edit messages will send you this: You've entered message editor for Taterzen . Enter same command to exit. Send messages in chat and Taterzen will repeat them. You can use normal text or tellraw structure (for colors). That means that any messages you send to chat will be redirected to Taterzen's to-say list instead.","title":"Adding new messages to Taterzen"},{"location":"getting_started/messages/#i-want-colored-messages","text":"No problem, Taterzens mod has you covered! It supports tellraw json text format as well. Generate any tellraw command with the text you want. There are online tools that can do it, I recommend using MCStacker . /tellraw @p {\"text\":\"Discord invite!\",\"color\":\"gold\",\"bold\":true,\"italic\":true,\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://discord.gg/9PAesuHFnp\"}} This would send a following-like text: Discord invite! Copy all text from first { all the way to the end. {\"text\":\"Discord invite!\",\"color\":\"gold\",\"bold\":true,\"italic\":true,\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://discord.gg/9PAesuHFnp\"}} Send it in chat and NPC will parse it. Chat GUI","title":"I want colored messages!"},{"location":"getting_started/messages/#and-then","text":"The NPC will send those messages to any player in range, with a certain delay. It can be changed in config, look for the messageDelay option.","title":"And then?"},{"location":"getting_started/messages/#editing-messages","text":"Oh no, I've made a typo! How do I fix it? Check the message id by running /npc edit messages list Taterzen Taterzen has the following messages. Click on one to edit it. 1-> Discord invite! X 2-> Second message. X 3-> Yet another message ... X Click on the message you'd like to edit or run /npc edit messages <id> Type the new message in chat and send it.","title":"Editing messages"},{"location":"getting_started/messages/#deleting-messages","text":"Simply run /npc edit messages <id> delete to delete the message with id <id> . Or click the X next to the message when listing them. To clear all the messages, run /npc edit messages clear","title":"Deleting messages"},{"location":"getting_started/movement/","text":"Movement Taking care of fitness Since Taterzens extend the Minecraft's vanilla PathfinderMob , they can perform pathfinding. Movement of Taterzens could be divided in 3 categories: free movement (Wandering around, random looking, following the path with rests) strict movement (Non-stop following the path / looking at the player) follow movement (Following specified targets) If you don't want the Taterzen to move, you can use /npc edit movement NONE (default). Strict Movement Looking at player Makes the Taterzen look at a player in radious of 4 blocks /npc edit movement FORCED_LOOK GUI Command For following the path strictly with no rests /npc edit movement FORCED_PATH Follow Movement Specifying any target /npc edit movement FOLLOW <target to follow> Specifying specific target /npc edit movement FOLLOW UUID <uuid of the target to follow> Free Movement If you have a non-escapable area, you can use the following command /npc edit movement FREE as it makes the Taterzen move around freely with no restrictions. For following the path but enabling long rests and looking around, use /npc edit movement PATH","title":"Movement"},{"location":"getting_started/movement/#movement","text":"","title":"Movement"},{"location":"getting_started/movement/#taking-care-of-fitness","text":"Since Taterzens extend the Minecraft's vanilla PathfinderMob , they can perform pathfinding. Movement of Taterzens could be divided in 3 categories: free movement (Wandering around, random looking, following the path with rests) strict movement (Non-stop following the path / looking at the player) follow movement (Following specified targets) If you don't want the Taterzen to move, you can use /npc edit movement NONE (default).","title":"Taking care of fitness"},{"location":"getting_started/movement/#strict-movement","text":"","title":"Strict Movement"},{"location":"getting_started/movement/#looking-at-player","text":"Makes the Taterzen look at a player in radious of 4 blocks /npc edit movement FORCED_LOOK GUI Command For following the path strictly with no rests /npc edit movement FORCED_PATH","title":"Looking at player"},{"location":"getting_started/movement/#follow-movement","text":"Specifying any target /npc edit movement FOLLOW <target to follow> Specifying specific target /npc edit movement FOLLOW UUID <uuid of the target to follow>","title":"Follow Movement"},{"location":"getting_started/movement/#free-movement","text":"If you have a non-escapable area, you can use the following command /npc edit movement FREE as it makes the Taterzen move around freely with no restrictions. For following the path but enabling long rests and looking around, use /npc edit movement PATH","title":"Free Movement"},{"location":"getting_started/nametags/","text":"Nametags Hiding / showing names Do you need npc's name above head to be hidden? You have the following options add Taterzen to a team and set a nametag visibility team rule use a built-in command (this won't support changing poses ) /npc edit tags showCustomName false","title":"Nametags"},{"location":"getting_started/nametags/#nametags","text":"","title":"Nametags"},{"location":"getting_started/nametags/#hiding-showing-names","text":"Do you need npc's name above head to be hidden? You have the following options add Taterzen to a team and set a nametag visibility team rule use a built-in command (this won't support changing poses ) /npc edit tags showCustomName false","title":"Hiding / showing names"},{"location":"getting_started/path/","text":"Path Path Setting path nodes Path nodes are targets where Taterzen will move. To edit those, you need to enter the path editor by running /npc edit path (To exit the editor, run the same command again.) 1. Adding blocks To add a block to path, simply left click on it. It will temporarily be switched to redstone block. 2. Removing blocks To remove a block from path, right click on it. Clear whole path To remove all nodes, run /npc edit path clear You'd probably want to set the movement to NONE as well.","title":"Path"},{"location":"getting_started/path/#path","text":"","title":"Path"},{"location":"getting_started/path/#path_1","text":"","title":"Path"},{"location":"getting_started/path/#setting-path-nodes","text":"Path nodes are targets where Taterzen will move. To edit those, you need to enter the path editor by running /npc edit path (To exit the editor, run the same command again.)","title":"Setting path nodes"},{"location":"getting_started/path/#1-adding-blocks","text":"To add a block to path, simply left click on it. It will temporarily be switched to redstone block.","title":"1. Adding blocks"},{"location":"getting_started/path/#2-removing-blocks","text":"To remove a block from path, right click on it.","title":"2. Removing blocks"},{"location":"getting_started/path/#clear-whole-path","text":"To remove all nodes, run /npc edit path clear You'd probably want to set the movement to NONE as well.","title":"Clear whole path"},{"location":"getting_started/poses/","text":"Posing Taterzens Cusom poses Taterzens support changing their pose /npc edit pose <pose to use> When entity type is set to PLAYER , \"working\" poses are standing (default) swimming sneaking / crouching sleeping other poses usually just change the name position and do not appear visually different.","title":"Poses"},{"location":"getting_started/poses/#posing-taterzens","text":"","title":"Posing Taterzens"},{"location":"getting_started/poses/#cusom-poses","text":"Taterzens support changing their pose /npc edit pose <pose to use> When entity type is set to PLAYER , \"working\" poses are standing (default) swimming sneaking / crouching sleeping other poses usually just change the name position and do not appear visually different.","title":"Cusom poses"},{"location":"getting_started/presets/","text":"Taterzen Presets What are presets? Presets allow you to export certain Taterzen along with all its equipment, skin, path, command action etc. to file. You can than share those with your friends and load custom presets. Exporting Taterzen to presets /npc preset save <preset_name> will export selected Taterzen to the minecraft_folder/config/Taterzens/presets/<preset_name>.json . Loading Taterzen from presets /npc preset load <preset_name> will load & spawn Taterzen from minecraft_folder/config/Taterzens/presets/<preset_name>.json .","title":"Presets"},{"location":"getting_started/presets/#taterzen-presets","text":"","title":"Taterzen Presets"},{"location":"getting_started/presets/#what-are-presets","text":"Presets allow you to export certain Taterzen along with all its equipment, skin, path, command action etc. to file. You can than share those with your friends and load custom presets.","title":"What are presets?"},{"location":"getting_started/presets/#exporting-taterzen-to-presets","text":"/npc preset save <preset_name> will export selected Taterzen to the minecraft_folder/config/Taterzens/presets/<preset_name>.json .","title":"Exporting Taterzen to presets"},{"location":"getting_started/presets/#loading-taterzen-from-presets","text":"/npc preset load <preset_name> will load & spawn Taterzen from minecraft_folder/config/Taterzens/presets/<preset_name>.json .","title":"Loading Taterzen from presets"},{"location":"getting_started/quests/","text":"Creating quests Below is a video with simple dialogue / quest. If you're interested how it's made, download out the world , used in video.","title":"Dialogue showcase"},{"location":"getting_started/quests/#creating-quests","text":"Below is a video with simple dialogue / quest. If you're interested how it's made, download out the world , used in video.","title":"Creating quests"},{"location":"getting_started/skins/","text":"Changing skins Default (built-in) skin swapping By player name. Taterzens mod supports setting custom skins to NPCs if their type is set to PLAYER . All skins are cached after being set, meaning that they will stay the same even if player that skin was fetched from changes their skin . You can set any skin from any minecraft player using /npc edit skin <minecraft player name> From mineskin . Visit mineskin.org site Upload the skin you want for taterzen / use a player name. Click on generate & copy URL (or scroll down, then choose Taterzens and copy the command) Enter the command /npc edit skin <your mineskin URL> E.g. /npc edit skin https://www.mineskin.org/1234 Skin layers To set custom skin layers to Taterzen, use /npc edit skin It will copy your skin settings to Taterzen. Custom skins This is similar to mineskin section. To use the skins to their fullest potential, you will need to install FabricTailor mod. After installing it, select the desired NPC you wish to change skin for. When having a Taterzen selected, simply run FabricTailor's /skin command /skin set <follow the wiki or brigadier suggestions>","title":"Skins"},{"location":"getting_started/skins/#changing-skins","text":"","title":"Changing skins"},{"location":"getting_started/skins/#default-built-in-skin-swapping","text":"By player name. Taterzens mod supports setting custom skins to NPCs if their type is set to PLAYER . All skins are cached after being set, meaning that they will stay the same even if player that skin was fetched from changes their skin . You can set any skin from any minecraft player using /npc edit skin <minecraft player name> From mineskin . Visit mineskin.org site Upload the skin you want for taterzen / use a player name. Click on generate & copy URL (or scroll down, then choose Taterzens and copy the command) Enter the command /npc edit skin <your mineskin URL> E.g. /npc edit skin https://www.mineskin.org/1234","title":"Default (built-in) skin swapping"},{"location":"getting_started/skins/#skin-layers","text":"To set custom skin layers to Taterzen, use /npc edit skin It will copy your skin settings to Taterzen.","title":"Skin layers"},{"location":"getting_started/skins/#custom-skins","text":"This is similar to mineskin section. To use the skins to their fullest potential, you will need to install FabricTailor mod. After installing it, select the desired NPC you wish to change skin for. When having a Taterzen selected, simply run FabricTailor's /skin command /skin set <follow the wiki or brigadier suggestions>","title":"Custom skins"},{"location":"getting_started/sounds/","text":"Changing sounds Those sounds are annoying Wanna turn off the sounds for the Taterzen? Simply type /npc edit tags allowSounds false this will mute Taterzen. Changing Default Sounds You will need to open config file found in .minecraft/config/Taterzens/config.json . Open it with any text editor (although I recommend something like Notepad++) and edit the following values: \"death_sounds\": [ \"my.custom.sound\", \"another.custom.sound\" ], \"hurt_sounds\": [ \"entity.player.hurt\" ], \"ambient_sounds\": [] Empty array ( [] ) means no sound. If there is more than one sound, it will be chosen randomly. Those are the default sounds a Taterzen will have after their creation. You can always remove sounds individually or completely (see the section about Changing individual sounds ). Changing individual sounds The default sounds won't do anymore, and you are tired of your pet wolf NPC sounding like a villager? Then the sound commands will relieve you of your pain. Currently, it is possible to edit sounds in the following three categories: - Ambient Sounds: The sound your Taterzen will randomly make from time to time. - Hurt Sounds: The sound your Taterzen will make when they are being attacked. - Death Sounds: The sound your Taterzen will make when they die. To edit individual sounds of a Taterzen NPC you need to select them first. Afterwards you are provided with a variety of possibilities to gain information about the currently set sounds as well as to modify them. Retrieving currently set sounds for an individual Taterzen Retrieve a list of currently set sounds with: /npc edit sounds list <all|ambient|hurt|death> For example, if you want to list the entries of all three sound categories at once, enter: /npc edit sounds list all If you desire the set sounds for, e.g., the hurt sounds instead, type: /npc edit sounds list hurt Adding sounds to an individual Taterzen You can add sounds to one of the previously mentioned three sound categories. The command looks like this: /npc edit sounds add <ambient|hurt|death> <resource> Make sure to use only valid sound resources. Otherwise, your Taterzen might remain quiet. It is possible that you get error messages if you do something wrong. But don't worry! Everything you do with these commands is reversible. You can utilize tab-completion suggestions, which show all available and valid sound resources. They can make your life easier. For example, you want to make your Taterzen sound like a chicken: /npc edit sounds add ambient entity.chicken.ambient Or, if you are using tab-completion or just like to type out namespaces: /npc edit sounds add ambient minecraft:entity.chicken.ambient Removing sounds from an individual Taterzen In case you changed your mind or did something wrong, you can easily remove individual or all sounds from a Taterzen. The removal command has the following structure: /npc edit sounds remove all|<<ambient|hurt|death> all|<<index|resource> <identifier>>> This looks, indeed, a bit complicated. Let's decompose the different cases and visualize them with some examples. A little more decomposed, the command has a tree-like structure as follows: /npc edit sounds remove all | -- <ambient|hurt|death> all | -- <index|resource> <identifier> Here the lines only containing '|' leading downwards and starting with '--' represent alternatives, which you may enter after the word above the straight bar '|'. Still confused? Let's have some examples: Assume you want to remove all sounds from all sound categories from your selected Taterzen. In that case you can simply do: /npc edit sounds remove all If you want to remove all sounds from a specific sound category instead, and this category is for example the death sound category, then this command will fulfill that job: /npc edit sounds remove death all Consider another case: You would like to remove a specific sound from a specific sound category, then you've got two possibilities. Assume that our output of /npc edit sounds list all yields: Currently set ambient sounds: 1. minecraft:entity.chicken.ambient 2. minecraft:entity.villager.ambient Currently set hurt sounds: No sounds set. Currently set death sounds: No sounds set and we want to get rid of the villager sound. Now you can either remove the sound using the index (i.e. the number) of the corresponding list entry: /npc edit sounds remove ambient index 2 Or you can remove the sound using its name: /npc edit sounds remove ambient resource minecraft:entity.villager.ambient Alternatively without the namespace: /npc edit sounds remove ambient resource entity.villager.ambient Note that for addressing the sound with the index, you need the index keyword after you specified the sound category, while you have to use the resource keyword in order to remove the sound by using its name. (Technically the name represents a so-called resource location . See Minecraft-Wiki: https://minecraft.fandom.com/wiki/Resource_location ) Remember: Tab-completion makes your life easier!","title":"Sounds"},{"location":"getting_started/sounds/#changing-sounds","text":"","title":"Changing sounds"},{"location":"getting_started/sounds/#those-sounds-are-annoying","text":"Wanna turn off the sounds for the Taterzen? Simply type /npc edit tags allowSounds false this will mute Taterzen.","title":"Those sounds are annoying"},{"location":"getting_started/sounds/#changing-default-sounds","text":"You will need to open config file found in .minecraft/config/Taterzens/config.json . Open it with any text editor (although I recommend something like Notepad++) and edit the following values: \"death_sounds\": [ \"my.custom.sound\", \"another.custom.sound\" ], \"hurt_sounds\": [ \"entity.player.hurt\" ], \"ambient_sounds\": [] Empty array ( [] ) means no sound. If there is more than one sound, it will be chosen randomly. Those are the default sounds a Taterzen will have after their creation. You can always remove sounds individually or completely (see the section about Changing individual sounds ).","title":"Changing Default Sounds"},{"location":"getting_started/sounds/#changing-individual-sounds","text":"The default sounds won't do anymore, and you are tired of your pet wolf NPC sounding like a villager? Then the sound commands will relieve you of your pain. Currently, it is possible to edit sounds in the following three categories: - Ambient Sounds: The sound your Taterzen will randomly make from time to time. - Hurt Sounds: The sound your Taterzen will make when they are being attacked. - Death Sounds: The sound your Taterzen will make when they die. To edit individual sounds of a Taterzen NPC you need to select them first. Afterwards you are provided with a variety of possibilities to gain information about the currently set sounds as well as to modify them.","title":"Changing individual sounds"},{"location":"getting_started/sounds/#retrieving-currently-set-sounds-for-an-individual-taterzen","text":"Retrieve a list of currently set sounds with: /npc edit sounds list <all|ambient|hurt|death> For example, if you want to list the entries of all three sound categories at once, enter: /npc edit sounds list all If you desire the set sounds for, e.g., the hurt sounds instead, type: /npc edit sounds list hurt","title":"Retrieving currently set sounds for an individual Taterzen"},{"location":"getting_started/sounds/#adding-sounds-to-an-individual-taterzen","text":"You can add sounds to one of the previously mentioned three sound categories. The command looks like this: /npc edit sounds add <ambient|hurt|death> <resource> Make sure to use only valid sound resources. Otherwise, your Taterzen might remain quiet. It is possible that you get error messages if you do something wrong. But don't worry! Everything you do with these commands is reversible. You can utilize tab-completion suggestions, which show all available and valid sound resources. They can make your life easier. For example, you want to make your Taterzen sound like a chicken: /npc edit sounds add ambient entity.chicken.ambient Or, if you are using tab-completion or just like to type out namespaces: /npc edit sounds add ambient minecraft:entity.chicken.ambient","title":"Adding sounds to an individual Taterzen"},{"location":"getting_started/sounds/#removing-sounds-from-an-individual-taterzen","text":"In case you changed your mind or did something wrong, you can easily remove individual or all sounds from a Taterzen. The removal command has the following structure: /npc edit sounds remove all|<<ambient|hurt|death> all|<<index|resource> <identifier>>> This looks, indeed, a bit complicated. Let's decompose the different cases and visualize them with some examples. A little more decomposed, the command has a tree-like structure as follows: /npc edit sounds remove all | -- <ambient|hurt|death> all | -- <index|resource> <identifier> Here the lines only containing '|' leading downwards and starting with '--' represent alternatives, which you may enter after the word above the straight bar '|'. Still confused? Let's have some examples: Assume you want to remove all sounds from all sound categories from your selected Taterzen. In that case you can simply do: /npc edit sounds remove all If you want to remove all sounds from a specific sound category instead, and this category is for example the death sound category, then this command will fulfill that job: /npc edit sounds remove death all Consider another case: You would like to remove a specific sound from a specific sound category, then you've got two possibilities. Assume that our output of /npc edit sounds list all yields: Currently set ambient sounds: 1. minecraft:entity.chicken.ambient 2. minecraft:entity.villager.ambient Currently set hurt sounds: No sounds set. Currently set death sounds: No sounds set and we want to get rid of the villager sound. Now you can either remove the sound using the index (i.e. the number) of the corresponding list entry: /npc edit sounds remove ambient index 2 Or you can remove the sound using its name: /npc edit sounds remove ambient resource minecraft:entity.villager.ambient Alternatively without the namespace: /npc edit sounds remove ambient resource entity.villager.ambient Note that for addressing the sound with the index, you need the index keyword after you specified the sound category, while you have to use the resource keyword in order to remove the sound by using its name. (Technically the name represents a so-called resource location . See Minecraft-Wiki: https://minecraft.fandom.com/wiki/Resource_location ) Remember: Tab-completion makes your life easier!","title":"Removing sounds from an individual Taterzen"},{"location":"getting_started/spawn_eggs/","text":"Spawn eggs Alternative to command spawning Taterzens can be summoned using spawn eggs as well. What's more, you can even load presets with spawn eggs. Note Taterzen won't be selected if you spawn it with a spawn egg. Basic spawning /give @s chicken_spawn_egg{EntityTag:{id:\"taterzens:npc\"}} 1 Spawning with presets Let's assume we have a taterzen preset named my_npc . This command gives you a spawn egg that will spawn a taterzen from that preset. /give @s chicken_spawn_egg{EntityTag:{id:\"taterzens:npc\", PresetOverride:\"my_npc\"}} 1 To change the preset to load, edit the PresetOverride tag.","title":"Spawn Eggs"},{"location":"getting_started/spawn_eggs/#spawn-eggs","text":"","title":"Spawn eggs"},{"location":"getting_started/spawn_eggs/#alternative-to-command-spawning","text":"Taterzens can be summoned using spawn eggs as well. What's more, you can even load presets with spawn eggs. Note Taterzen won't be selected if you spawn it with a spawn egg.","title":"Alternative to command spawning"},{"location":"getting_started/spawn_eggs/#basic-spawning","text":"/give @s chicken_spawn_egg{EntityTag:{id:\"taterzens:npc\"}} 1","title":"Basic spawning"},{"location":"getting_started/spawn_eggs/#spawning-with-presets","text":"Let's assume we have a taterzen preset named my_npc . This command gives you a spawn egg that will spawn a taterzen from that preset. /give @s chicken_spawn_egg{EntityTag:{id:\"taterzens:npc\", PresetOverride:\"my_npc\"}} 1 To change the preset to load, edit the PresetOverride tag.","title":"Spawning with presets"},{"location":"getting_started/types/","text":"Entity Types Changing the type of Taterzen You'l need to install DisguiseLib mod. Taterzens mod supports all vanilla entities (except for fishing bober). Modded ones should work as well. To change the type of the Taterzen, simply use the following command /npc edit type <entity type> Adding custom NBT DisguiseLib supports disguises with nbt as well. To utilize it, append the nbt data at the end of the disguise command /npc edit type <entity type> <nbt> Examples Getting custom NBT Head over to mcstacker and select summon category. Provide the entity and set the wanted NBT. After that, copy the NBT only (the part in {} , including both brackets) and paste it after <entity type> in command above. Armorer villager from desert /npc edit type minecraft:villager {VillagerData:{profession:\"minecraft:armorer\",type:\"minecraft:desert\"}} Baby chicken /npc edit type minecraft:chicken {Age:-1} Custom armor stand Easy armor stand customization Patbox has made a cool armor stand editor that supports disguised entites as well. See Armor Stand Editor for more info. /npc edit type minecraft:armor_stand {HasVisualFire:1b,Glowing:0b,ShowArms:1b,Small:1b,NoBasePlate:1b}","title":"Entity Types"},{"location":"getting_started/types/#entity-types","text":"","title":"Entity Types"},{"location":"getting_started/types/#changing-the-type-of-taterzen","text":"You'l need to install DisguiseLib mod. Taterzens mod supports all vanilla entities (except for fishing bober). Modded ones should work as well. To change the type of the Taterzen, simply use the following command /npc edit type <entity type>","title":"Changing the type of Taterzen"},{"location":"getting_started/types/#adding-custom-nbt","text":"DisguiseLib supports disguises with nbt as well. To utilize it, append the nbt data at the end of the disguise command /npc edit type <entity type> <nbt>","title":"Adding custom NBT"},{"location":"getting_started/types/#examples","text":"Getting custom NBT Head over to mcstacker and select summon category. Provide the entity and set the wanted NBT. After that, copy the NBT only (the part in {} , including both brackets) and paste it after <entity type> in command above.","title":"Examples"},{"location":"getting_started/types/#armorer-villager-from-desert","text":"/npc edit type minecraft:villager {VillagerData:{profession:\"minecraft:armorer\",type:\"minecraft:desert\"}}","title":"Armorer villager from desert"},{"location":"getting_started/types/#baby-chicken","text":"/npc edit type minecraft:chicken {Age:-1}","title":"Baby chicken"},{"location":"getting_started/types/#custom-armor-stand","text":"Easy armor stand customization Patbox has made a cool armor stand editor that supports disguised entites as well. See Armor Stand Editor for more info. /npc edit type minecraft:armor_stand {HasVisualFire:1b,Glowing:0b,ShowArms:1b,Small:1b,NoBasePlate:1b}","title":"Custom armor stand"},{"location":"getting_started/command_actions/","text":"Command Actions Right-click command actions Taterzens support executing multiple commands on click from version 0.3.0 . Commands allow you to tp players, give them stuff etc. Even more, you can target the Taterzen itself, random player or all players! NPCs can even edit themselves via commands that they execute! See the following video for example. To see all the commands that will be run when Taterzen is right-clicked, use /npc edit commands list Permission levels (aka Why did my command not work? ) Default permission level for newly-spawned-in NPCs can be found in config . If you'd like to keep a Taterzen to execute non-op commands only, you'd type: /npc edit commands setPermissionLevel 0 If you'd like to have op status, set their permission level to 4 /npc edit commands setPermissionLevel 4 Targeting the clicker In most cases you'd probably like to target the player who clicked the NPC. In theory you could use the @p target selector but that targets the nearest player , who is not neccesarily the one who interacted with the Taterzen. Using @s will target Taterzen itself! Instead of that, you can use --clicker-- , mod will replace any occurences with the player's name when executing the command. Giving the clicker a gold ingot: /npc edit commands add minecraft give --clicker-- gold_ingot Teleporting the clicker 10 blocks up: /npc edit commands add minecraft execute at --clicker-- run tp --clicker-- ~ ~10 ~","title":"Right-click Actions"},{"location":"getting_started/command_actions/#command-actions","text":"","title":"Command Actions"},{"location":"getting_started/command_actions/#right-click-command-actions","text":"Taterzens support executing multiple commands on click from version 0.3.0 . Commands allow you to tp players, give them stuff etc. Even more, you can target the Taterzen itself, random player or all players! NPCs can even edit themselves via commands that they execute! See the following video for example. To see all the commands that will be run when Taterzen is right-clicked, use /npc edit commands list","title":"Right-click command actions"},{"location":"getting_started/command_actions/#permission-levels","text":"(aka Why did my command not work? ) Default permission level for newly-spawned-in NPCs can be found in config . If you'd like to keep a Taterzen to execute non-op commands only, you'd type: /npc edit commands setPermissionLevel 0 If you'd like to have op status, set their permission level to 4 /npc edit commands setPermissionLevel 4","title":"Permission levels"},{"location":"getting_started/command_actions/#targeting-the-clicker","text":"In most cases you'd probably like to target the player who clicked the NPC. In theory you could use the @p target selector but that targets the nearest player , who is not neccesarily the one who interacted with the Taterzen. Using @s will target Taterzen itself! Instead of that, you can use --clicker-- , mod will replace any occurences with the player's name when executing the command. Giving the clicker a gold ingot: /npc edit commands add minecraft give --clicker-- gold_ingot Teleporting the clicker 10 blocks up: /npc edit commands add minecraft execute at --clicker-- run tp --clicker-- ~ ~10 ~","title":"Targeting the clicker"},{"location":"getting_started/command_actions/bungee_actions/","text":"Adding proxy actions Setup Make sure that \"bungee\" -> \"enable_commands\" is set to true in config . ( /taterzens config edit bungee enableCommands true ) You can now add a bungee / velocity command via /npc edit commands add bungee <cmd> <player> <parameter> where cmd - bungee action command, see below player - player to execute action for parameter - parameter if required by command Available commands server - transfers player to another server (parameter: server name) message - sends message to the player message_raw - sends message to the player in tellraw format kick - kicks player (parameter: reason for kick) Server redirect","title":"Bungee Actions"},{"location":"getting_started/command_actions/bungee_actions/#adding-proxy-actions","text":"","title":"Adding proxy actions"},{"location":"getting_started/command_actions/bungee_actions/#setup","text":"Make sure that \"bungee\" -> \"enable_commands\" is set to true in config . ( /taterzens config edit bungee enableCommands true ) You can now add a bungee / velocity command via /npc edit commands add bungee <cmd> <player> <parameter> where cmd - bungee action command, see below player - player to execute action for parameter - parameter if required by command","title":"Setup"},{"location":"getting_started/command_actions/bungee_actions/#available-commands","text":"server - transfers player to another server (parameter: server name) message - sends message to the player message_raw - sends message to the player in tellraw format kick - kicks player (parameter: reason for kick)","title":"Available commands"},{"location":"getting_started/command_actions/bungee_actions/#server-redirect","text":"","title":"Server redirect"},{"location":"getting_started/command_actions/creating_action/","text":"New right-click command action Adding new command to Taterzen It's as simple as using /npc edit commands add minecraft <command> Note: all commands that are added to the group are executed AT ONCE when NPC is interacted with. Each group of commands is executed on right click. When npc is clicked the second time, new group is selected and its commands are executed. I want to target the player who interacted with my NPC! Nothing easier! There is built-in --clicker-- target, which is replaced by the name of the player that has right clicked the NPC. Let's suppose player with name samo_lego interacts with the NPC that we previously added the following command: /npc edit commands add minecraft give --clicker-- sunflower{display:{Name:'{\"text\":\"--clicker--'s coin\"}'}} The command Taterzen will execute will change to the following: /give samo_lego sunflower{display:{Name:'{\"text\":\"samo_lego's coin\"}'}} 1 And our player will get a Sunflower item with the name samo_lego's coin .","title":"Adding Command Actions"},{"location":"getting_started/command_actions/creating_action/#new-right-click-command-action","text":"","title":"New right-click command action"},{"location":"getting_started/command_actions/creating_action/#adding-new-command-to-taterzen","text":"It's as simple as using /npc edit commands add minecraft <command> Note: all commands that are added to the group are executed AT ONCE when NPC is interacted with. Each group of commands is executed on right click. When npc is clicked the second time, new group is selected and its commands are executed.","title":"Adding new command to Taterzen"},{"location":"getting_started/command_actions/creating_action/#i-want-to-target-the-player-who-interacted-with-my-npc","text":"Nothing easier! There is built-in --clicker-- target, which is replaced by the name of the player that has right clicked the NPC. Let's suppose player with name samo_lego interacts with the NPC that we previously added the following command: /npc edit commands add minecraft give --clicker-- sunflower{display:{Name:'{\"text\":\"--clicker--'s coin\"}'}} The command Taterzen will execute will change to the following: /give samo_lego sunflower{display:{Name:'{\"text\":\"samo_lego's coin\"}'}} 1 And our player will get a Sunflower item with the name samo_lego's coin .","title":"I want to target the player who interacted with my NPC!"},{"location":"getting_started/command_actions/editing_actions/","text":"Editing actions Oh no, I don't want that command anymore! Check the command id by running /npc edit commands list Taterzen Taterzen will execute the following commands on right-click. 1-> give @r diamond X 2-> tp --clicker-- ~ ~10 ~ X 3-> msg @a I'm broke now! X Then click on the command you'd like to remove or type /npc edit commands group id <group id> remove <command id> Deleting all commands To clear all the commands, run /npc edit commands clear","title":"Editing Actions"},{"location":"getting_started/command_actions/editing_actions/#editing-actions","text":"","title":"Editing actions"},{"location":"getting_started/command_actions/editing_actions/#oh-no-i-dont-want-that-command-anymore","text":"Check the command id by running /npc edit commands list Taterzen Taterzen will execute the following commands on right-click. 1-> give @r diamond X 2-> tp --clicker-- ~ ~10 ~ X 3-> msg @a I'm broke now! X Then click on the command you'd like to remove or type /npc edit commands group id <group id> remove <command id>","title":"Oh no, I don't want that command anymore!"},{"location":"getting_started/command_actions/editing_actions/#deleting-all-commands","text":"To clear all the commands, run /npc edit commands clear","title":"Deleting all commands"},{"location":"getting_started/commands/npc_command/","text":"npc command What does it do? It helps you manage the NPCs. Make sure you have selected the NPC before doing edits. Creating /npc create <name of the NPC> - Creates a Taterzen NPC and selects it. Removing /npc remove - Removes the selected Taterzen NPC. Teleporting /npc tp <destination> - Teleports the selected NPC to the desired location. * <destination> can be an entity or a set of relative / absolute coordinates Listing /npc list - Lists available (loaded) NPCs. Selecting You can select NPCs by their ID, name, UUID or based on proximity and look direction. Note: The ID means the list index number which is shown when you run the /npc list command. (The first number before the name.) Contrary, the UUID is the u niversally u nique id entifier as used internally by Minecraft to uniquely distinguish between entities. (See Minecraft Wiki: https://minecraft.fandom.com/wiki/Universally_unique_identifier ) Id Run /npc list to view the IDs of available NPCs. Run /npc select id <ID> to select it. UUID Run /npc list to view the list of available NPCs. With the command prompt (the chat) being open, hover with the mouse over (UUID) after the name of the NPC you want to select. Click on the (UUID) text in the list. The UUID of your NPC will be displayed in the chat input. Select it and copy it to clipboard (usually CTRL and C on Windows.) Run /npc select uuid <UUID> , paste the <UUID> from clipboard (with CTRL and V on Windows). Alternatively use one of the tab-completion suggestions. The Npc is then selected. Name Run /npc list to view the list of available NPCs and their names. Run /npc select name <NAME> to select your desired NPC. Alternatively use one of the names from the tab-completion suggestions. Note: In case the name of your NPC contains whitespaces (e.g. something like \"Steve the Dragonslayer\") make sure to enclose the name in quotation marks. In our example: /npc select name \"Steve the Dragonslayer\" . Without the quotation marks the NPC won't be selected. Note: If you have more than one NPC with the same name, no NPC will be selected and an error message will be displayed. Distance Stand in front of the NPC you want to select. Run /npc select to select it. Editing You can change many aspects of the NPC, e.g. its entity type, skin, pose, name, messages, right-click actions etc.","title":"npc command"},{"location":"getting_started/commands/npc_command/#npc-command","text":"","title":"npc command"},{"location":"getting_started/commands/npc_command/#what-does-it-do","text":"It helps you manage the NPCs. Make sure you have selected the NPC before doing edits.","title":"What does it do?"},{"location":"getting_started/commands/npc_command/#creating","text":"/npc create <name of the NPC> - Creates a Taterzen NPC and selects it.","title":"Creating"},{"location":"getting_started/commands/npc_command/#removing","text":"/npc remove - Removes the selected Taterzen NPC.","title":"Removing"},{"location":"getting_started/commands/npc_command/#teleporting","text":"/npc tp <destination> - Teleports the selected NPC to the desired location. * <destination> can be an entity or a set of relative / absolute coordinates","title":"Teleporting"},{"location":"getting_started/commands/npc_command/#listing","text":"/npc list - Lists available (loaded) NPCs.","title":"Listing"},{"location":"getting_started/commands/npc_command/#selecting","text":"You can select NPCs by their ID, name, UUID or based on proximity and look direction. Note: The ID means the list index number which is shown when you run the /npc list command. (The first number before the name.) Contrary, the UUID is the u niversally u nique id entifier as used internally by Minecraft to uniquely distinguish between entities. (See Minecraft Wiki: https://minecraft.fandom.com/wiki/Universally_unique_identifier )","title":"Selecting"},{"location":"getting_started/commands/npc_command/#id","text":"Run /npc list to view the IDs of available NPCs. Run /npc select id <ID> to select it.","title":"Id"},{"location":"getting_started/commands/npc_command/#uuid","text":"Run /npc list to view the list of available NPCs. With the command prompt (the chat) being open, hover with the mouse over (UUID) after the name of the NPC you want to select. Click on the (UUID) text in the list. The UUID of your NPC will be displayed in the chat input. Select it and copy it to clipboard (usually CTRL and C on Windows.) Run /npc select uuid <UUID> , paste the <UUID> from clipboard (with CTRL and V on Windows). Alternatively use one of the tab-completion suggestions. The Npc is then selected.","title":"UUID"},{"location":"getting_started/commands/npc_command/#name","text":"Run /npc list to view the list of available NPCs and their names. Run /npc select name <NAME> to select your desired NPC. Alternatively use one of the names from the tab-completion suggestions. Note: In case the name of your NPC contains whitespaces (e.g. something like \"Steve the Dragonslayer\") make sure to enclose the name in quotation marks. In our example: /npc select name \"Steve the Dragonslayer\" . Without the quotation marks the NPC won't be selected. Note: If you have more than one NPC with the same name, no NPC will be selected and an error message will be displayed.","title":"Name"},{"location":"getting_started/commands/npc_command/#distance","text":"Stand in front of the NPC you want to select. Run /npc select to select it.","title":"Distance"},{"location":"getting_started/commands/npc_command/#editing","text":"You can change many aspects of the NPC, e.g. its entity type, skin, pose, name, messages, right-click actions etc.","title":"Editing"},{"location":"getting_started/commands/taterzens_command/","text":"taterzens command What does it do? This command is intended for admins-only. It allows to reload / edit the config file .","title":"taterzens command"},{"location":"getting_started/commands/taterzens_command/#taterzens-command","text":"","title":"taterzens command"},{"location":"getting_started/commands/taterzens_command/#what-does-it-do","text":"This command is intended for admins-only. It allows to reload / edit the config file .","title":"What does it do?"},{"location":"installation/","text":"Installing Taterzens Latest stable version of Taterzens can be grabbed from Modrinth CurseForge","title":"Stable Installation"},{"location":"installation/#installing-taterzens","text":"Latest stable version of Taterzens can be grabbed from Modrinth CurseForge","title":"Installing Taterzens"},{"location":"installation/config/","text":"Configuring Taterzens Changing configuration Configuration file includes some properties for newly created Taterzens. Find all the settings below. Changing language The default provided language file is en_us . All available languages can also be found on GitHub . All languages en_us If you are already running Minecraft, you can use a command to change language. Supported languages will show up in suggestions. /taterzens config edit language <language> Otherwise, open up the config file and change the following line { - \"language\": \"en_us\" + \"language\": \"custom_language\" } Translations Missing a language? Feel free to translate Taterzens ! Note Taterzens also supports per-player translations using Server Translations Mod . In-game editing Taterzens also supports editing config in-game. See below video for example. Latest config This represents the latest config file, generated automatically. Look at the _comment fields to get better explanation of the option. Refresh Loading ...","title":"Configurations"},{"location":"installation/config/#configuring-taterzens","text":"","title":"Configuring Taterzens"},{"location":"installation/config/#changing-configuration","text":"Configuration file includes some properties for newly created Taterzens. Find all the settings below.","title":"Changing configuration"},{"location":"installation/config/#changing-language","text":"The default provided language file is en_us . All available languages can also be found on GitHub . All languages en_us If you are already running Minecraft, you can use a command to change language. Supported languages will show up in suggestions. /taterzens config edit language <language> Otherwise, open up the config file and change the following line { - \"language\": \"en_us\" + \"language\": \"custom_language\" }","title":"Changing language"},{"location":"installation/config/#translations","text":"Missing a language? Feel free to translate Taterzens ! Note Taterzens also supports per-player translations using Server Translations Mod .","title":"Translations"},{"location":"installation/config/#in-game-editing","text":"Taterzens also supports editing config in-game. See below video for example.","title":"In-game editing"},{"location":"installation/config/#latest-config","text":"This represents the latest config file, generated automatically. Look at the _comment fields to get better explanation of the option. Refresh Loading ...","title":"Latest config"},{"location":"installation/source_installation/","text":"Source Installation Compilation of Taterzens Here be dragons! It might happen that your existing Taterzens will get wiped! Proceed with caution! Download latest unstable version from GH actions . Build the mod yourself. git clone https://github.com/samolego/Taterzens.git cd Taterzens chmod +x gradlew gradlew build The files can be found in build/libs folder.","title":"Source Installation"},{"location":"installation/source_installation/#source-installation","text":"","title":"Source Installation"},{"location":"installation/source_installation/#compilation-of-taterzens","text":"Here be dragons! It might happen that your existing Taterzens will get wiped! Proceed with caution! Download latest unstable version from GH actions . Build the mod yourself. git clone https://github.com/samolego/Taterzens.git cd Taterzens chmod +x gradlew gradlew build The files can be found in build/libs folder.","title":"Compilation of Taterzens"},{"location":"professions/assigning_professions/","text":"Assigning professions (in-game) Giving Taterzen a profession /npc edit professions add <profession id> Profession IDs will be automatically generated for each profession that was registered by mod developers. By default, there are no profession mods available, but this might change in future :). Listing current professions /npc edit professions list This will print all the professions of Taterzen to chat. You can click on the X to remove profession from Taterzen. Removing professions As said above, you can click on the X next to the profession ID to remove it. But you can also use /npc edit professions remove <profession id>","title":"Assigning professions"},{"location":"professions/assigning_professions/#assigning-professions-in-game","text":"","title":"Assigning professions (in-game)"},{"location":"professions/assigning_professions/#giving-taterzen-a-profession","text":"/npc edit professions add <profession id> Profession IDs will be automatically generated for each profession that was registered by mod developers. By default, there are no profession mods available, but this might change in future :).","title":"Giving Taterzen a profession"},{"location":"professions/assigning_professions/#listing-current-professions","text":"/npc edit professions list This will print all the professions of Taterzen to chat. You can click on the X to remove profession from Taterzen.","title":"Listing current professions"},{"location":"professions/assigning_professions/#removing-professions","text":"As said above, you can click on the X next to the profession ID to remove it. But you can also use /npc edit professions remove <profession id>","title":"Removing professions"},{"location":"professions/blacksmiths/","text":"A Taterzen addon that brings tool-repairing-guys to Minecraft. Blacksmiths Blacksmiths addon allows you to create Taterzens which can repair tools. They can be configured how much durability per second they repair, whether they \"work\" in unloaded chunks, etc. Usage Make sure to assign the blacksmiths:blacksmith profession to your Taterzen. After that, simply use right click on the Taterzen to open the GUI. Pricing If you install Grand Economy mod, you can use it instead of default item pricing. Otherwise you can set the default payment item and how much is it \"worth\". Per-taterzen configuration Do you want your players to have taterzens with different repairing values? Use the following command: /profession blacksmith <rule> You can use the following rules: costPerDurabilityPoint - how much does it cost to repair 1 durability point. durabilityPerSecond - how much durability is repaired each second (can be less than 1 as well). workInUnloadedChunks - whether the taterzen works in unloaded chunks. Wait ... unloaded chunks? Yes, you've read it right. As Blackmiths operate via system time, they are not dependant on the server tick rate. What's more, your tools can be repaired even when your pc is off .","title":"Blacksmiths"},{"location":"professions/blacksmiths/#blacksmiths","text":"Blacksmiths addon allows you to create Taterzens which can repair tools. They can be configured how much durability per second they repair, whether they \"work\" in unloaded chunks, etc.","title":"Blacksmiths"},{"location":"professions/blacksmiths/#usage","text":"Make sure to assign the blacksmiths:blacksmith profession to your Taterzen. After that, simply use right click on the Taterzen to open the GUI.","title":"Usage"},{"location":"professions/blacksmiths/#pricing","text":"If you install Grand Economy mod, you can use it instead of default item pricing. Otherwise you can set the default payment item and how much is it \"worth\".","title":"Pricing"},{"location":"professions/blacksmiths/#per-taterzen-configuration","text":"Do you want your players to have taterzens with different repairing values? Use the following command: /profession blacksmith <rule> You can use the following rules: costPerDurabilityPoint - how much does it cost to repair 1 durability point. durabilityPerSecond - how much durability is repaired each second (can be less than 1 as well). workInUnloadedChunks - whether the taterzen works in unloaded chunks.","title":"Per-taterzen configuration"},{"location":"professions/blacksmiths/#wait-unloaded-chunks","text":"Yes, you've read it right. As Blackmiths operate via system time, they are not dependant on the server tick rate. What's more, your tools can be repaired even when your pc is off .","title":"Wait ... unloaded chunks?"},{"location":"professions/scarpet_profession/","text":"Hello scarpet world? Note This is curently only available on Fabric. Note You'll need to install CarpetMod . Script profession installation Download the script professions you want and put them in minecraft-folder/world/scripts . Run the server / singleplayer. Make sure the script is loaded ( /script load <script name> ). (To autoload the scripts, use /carpet setDefault scriptsAutoload true ) Give taterzen the taterzens:scarpet_profession ( /npc edit professions add taterzens:scarpet_profession ). Creating a merchant Download the merchant script and load it using the steps described above. Now you can trade: 16 oak_log(s) for 3 emerald(s) 32 stone for 2 gold . Modifying scripts Do you want to add trades to the above example? Simply add new items in the global_item_map . global_item_map = { // Takes 32 stone and gives 2 gold 'stone' -> { 'take_count'-> 32, 'trade_item'-> 'gold', 'trade_count'-> 2 }, // Takes 16 oak_log(s) and gives 3 emerald(s) 'oak_log' -> { 'take_count'-> 16, 'trade_item'-> 'emerald', 'trade_count'-> 3 - } + }, + // Takes 1 dirt and gives 64 diamond. Stonks! + 'dirt' -> { + 'take_count'-> 1, + 'trade_item'-> 'diamond', + 'trade_count'-> 64 } }; Also check out scarpet wiki and docs for help with custom script creation.","title":"Scarpet Profession"},{"location":"professions/scarpet_profession/#hello-scarpet-world","text":"Note This is curently only available on Fabric. Note You'll need to install CarpetMod .","title":"Hello scarpet world?"},{"location":"professions/scarpet_profession/#script-profession-installation","text":"Download the script professions you want and put them in minecraft-folder/world/scripts . Run the server / singleplayer. Make sure the script is loaded ( /script load <script name> ). (To autoload the scripts, use /carpet setDefault scriptsAutoload true ) Give taterzen the taterzens:scarpet_profession ( /npc edit professions add taterzens:scarpet_profession ).","title":"Script profession installation"},{"location":"professions/scarpet_profession/#creating-a-merchant","text":"Download the merchant script and load it using the steps described above. Now you can trade: 16 oak_log(s) for 3 emerald(s) 32 stone for 2 gold .","title":"Creating a merchant"},{"location":"professions/scarpet_profession/#modifying-scripts","text":"Do you want to add trades to the above example? Simply add new items in the global_item_map . global_item_map = { // Takes 32 stone and gives 2 gold 'stone' -> { 'take_count'-> 32, 'trade_item'-> 'gold', 'trade_count'-> 2 }, // Takes 16 oak_log(s) and gives 3 emerald(s) 'oak_log' -> { 'take_count'-> 16, 'trade_item'-> 'emerald', 'trade_count'-> 3 - } + }, + // Takes 1 dirt and gives 64 diamond. Stonks! + 'dirt' -> { + 'take_count'-> 1, + 'trade_item'-> 'diamond', + 'trade_count'-> 64 } }; Also check out scarpet wiki and docs for help with custom script creation.","title":"Modifying scripts"},{"location":"professions/traders/","text":"A Taterzens addon that adds ability to create GUI traders. Traders TraderNPCs addon allows you to create Taterzens with custom trades easily. You can use a GUI to add new trades or remove existing ones. Players can simply click on them to open the trading GUI and get infinite goods. Usage Make sure to assign the tradernpcs:trader profession to your Taterzen. After that, simply use the following command to edit trades: /profession trader edit Changing type to villager See changing type for more info.","title":"TraderNPCs"},{"location":"professions/traders/#traders","text":"TraderNPCs addon allows you to create Taterzens with custom trades easily. You can use a GUI to add new trades or remove existing ones. Players can simply click on them to open the trading GUI and get infinite goods.","title":"Traders"},{"location":"professions/traders/#usage","text":"Make sure to assign the tradernpcs:trader profession to your Taterzen. After that, simply use the following command to edit trades: /profession trader edit","title":"Usage"},{"location":"professions/traders/#changing-type-to-villager","text":"See changing type for more info.","title":"Changing type to villager"}]}