{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"An NPC / Citizen-like mod for Fabric / Forge modloader. Fabric: Forge:","title":"Home"},{"location":"code_docs/","text":"Javadoc Dokadoc Fresh new docs styled by JetBrains If you'd like to see what's happening behind the scenes, you can find javadoc dokadoc here .","title":"Code Documentation"},{"location":"code_docs/#javadoc-dokadoc","text":"","title":"Javadoc Dokadoc"},{"location":"code_docs/#fresh-new-docs-styled-by-jetbrains","text":"If you'd like to see what's happening behind the scenes, you can find javadoc dokadoc here .","title":"Fresh new docs styled by JetBrains"},{"location":"config/","text":"Configuring Taterzens Changing configuration Configuration file includes some properties for newly created Taterzens. Find all the settings below. Changing language The default provided language file is en_us . All available languages can also be found on GitHub . All languages en_us If you are already running Minecraft, you can use a command to change language. Supported languages will show up in suggestions. /taterzens config edit language <language> Otherwise, open up the config file and change the following line { - \"language\": \"en_us\" + \"language\": \"custom_language\" } Translations Missing a language? Feel free to translate Taterzens ! Note Taterzens also supports per-player translations using Server Translations Mod . Latest config This represents the latest config file, generated automatically. Look at the _comment fields to get better explanation of the option. Refresh Loading ...","title":"Configurations"},{"location":"config/#configuring-taterzens","text":"","title":"Configuring Taterzens"},{"location":"config/#changing-configuration","text":"Configuration file includes some properties for newly created Taterzens. Find all the settings below.","title":"Changing configuration"},{"location":"config/#changing-language","text":"The default provided language file is en_us . All available languages can also be found on GitHub . All languages en_us If you are already running Minecraft, you can use a command to change language. Supported languages will show up in suggestions. /taterzens config edit language <language> Otherwise, open up the config file and change the following line { - \"language\": \"en_us\" + \"language\": \"custom_language\" }","title":"Changing language"},{"location":"config/#translations","text":"Missing a language? Feel free to translate Taterzens ! Note Taterzens also supports per-player translations using Server Translations Mod .","title":"Translations"},{"location":"config/#latest-config","text":"This represents the latest config file, generated automatically. Look at the _comment fields to get better explanation of the option. Refresh Loading ...","title":"Latest config"},{"location":"donations/","text":"Donations Wow, you have considered donating ? Thank you so much!","title":"Donations"},{"location":"donations/#donations","text":"Wow, you have considered donating ? Thank you so much!","title":"Donations"},{"location":"help/","text":"Help Discord If you have any further questions or suggestions, you can join my Discord","title":"Help"},{"location":"help/#help","text":"","title":"Help"},{"location":"help/#discord","text":"If you have any further questions or suggestions, you can join my Discord","title":"Discord"},{"location":"presets/","text":"Taterzen Presets What are presets? Presets allow you to export certain Taterzen along with all its equipment, skin, path, command action etc. to file. You can than share those with your friends and load custom presets. Exporting Taterzen to presets /npc preset save <preset_name> will export selected Taterzen to the minecraft_folder/config/Taterzens/presets/<preset_name>.json . Loading Taterzen from presets /npc preset load <preset_name> will load & spawn Taterzen from minecraft_folder/config/Taterzens/presets/<preset_name>.json .","title":"Presets"},{"location":"presets/#taterzen-presets","text":"","title":"Taterzen Presets"},{"location":"presets/#what-are-presets","text":"Presets allow you to export certain Taterzen along with all its equipment, skin, path, command action etc. to file. You can than share those with your friends and load custom presets.","title":"What are presets?"},{"location":"presets/#exporting-taterzen-to-presets","text":"/npc preset save <preset_name> will export selected Taterzen to the minecraft_folder/config/Taterzens/presets/<preset_name>.json .","title":"Exporting Taterzen to presets"},{"location":"presets/#loading-taterzen-from-presets","text":"/npc preset load <preset_name> will load & spawn Taterzen from minecraft_folder/config/Taterzens/presets/<preset_name>.json .","title":"Loading Taterzen from presets"},{"location":"installation/","text":"Installing Taterzens Latest stable version of Taterzens can be grabbed from Modrinth CurseForge","title":"Stable Installation"},{"location":"installation/#installing-taterzens","text":"Latest stable version of Taterzens can be grabbed from Modrinth CurseForge","title":"Installing Taterzens"},{"location":"installation/source_installation/","text":"Source Installation Compilation of Taterzens Here be dragons! It might happen that your existing Taterzens will get wiped! Proceed with caution! Download latest unstable version from GH actions . Build the mod yourself. git clone https://github.com/samolego/Taterzens.git cd Taterzens chmod +x gradlew gradlew build The files can be found in build/libs folder.","title":"Source Installation"},{"location":"installation/source_installation/#source-installation","text":"","title":"Source Installation"},{"location":"installation/source_installation/#compilation-of-taterzens","text":"Here be dragons! It might happen that your existing Taterzens will get wiped! Proceed with caution! Download latest unstable version from GH actions . Build the mod yourself. git clone https://github.com/samolego/Taterzens.git cd Taterzens chmod +x gradlew gradlew build The files can be found in build/libs folder.","title":"Compilation of Taterzens"},{"location":"playing/","text":"Playing with Taterzens What is a Taterzen? It's a rather silly nickname for NPC, which stands for Non-Player-Character . It can be summoned with /npc create <name of the taterzen> .","title":"Start"},{"location":"playing/#playing-with-taterzens","text":"","title":"Playing with Taterzens"},{"location":"playing/#what-is-a-taterzen","text":"It's a rather silly nickname for NPC, which stands for Non-Player-Character . It can be summoned with /npc create <name of the taterzen> .","title":"What is a Taterzen?"},{"location":"playing/actions/","text":"Taterzen actions Actions Taterzens can perform certain player-like actions. Currently those are: * interacting with blocks (aka \"right-clicking\") * going to block position Block interactions To make th Taterzen interact with certain block, you can use the following command /npc action interact <x> <y> <z> where x , y and z are block coordinates. Your browser does not support the video element. Going to block position To make the Taterzen go to certain block, you can use the following command /npc action interact <x> <y> <z> where x , y and z are block coordinates. Your browser does not support the video element.","title":"Actions"},{"location":"playing/actions/#taterzen-actions","text":"","title":"Taterzen actions"},{"location":"playing/actions/#actions","text":"Taterzens can perform certain player-like actions. Currently those are: * interacting with blocks (aka \"right-clicking\") * going to block position","title":"Actions"},{"location":"playing/actions/#block-interactions","text":"To make th Taterzen interact with certain block, you can use the following command /npc action interact <x> <y> <z> where x , y and z are block coordinates. Your browser does not support the video element.","title":"Block interactions"},{"location":"playing/actions/#going-to-block-position","text":"To make the Taterzen go to certain block, you can use the following command /npc action interact <x> <y> <z> where x , y and z are block coordinates. Your browser does not support the video element.","title":"Going to block position"},{"location":"playing/bungee_actions/","text":"Adding proxy actions Setup Make sure that \"bungee\" -> \"enable_commands\" is set to true in config . ( /taterzens config edit bungee enableCommands true ) You can now add a bungee / velovity command via /npc edit commands addBungee <cmd> <player> <parameter> where cmd - bungee action command, see below player - player to execute action for parameter - parameter if required by command Available commands server - transfers player to another server (parameter: server name) message - sends message to the player message_raw - sends message to the player in tellraw format kick - kicks player (parameter: reason for kick) Server redirect Your browser does not support the video element.","title":"Bungee Actions"},{"location":"playing/bungee_actions/#adding-proxy-actions","text":"","title":"Adding proxy actions"},{"location":"playing/bungee_actions/#setup","text":"Make sure that \"bungee\" -> \"enable_commands\" is set to true in config . ( /taterzens config edit bungee enableCommands true ) You can now add a bungee / velovity command via /npc edit commands addBungee <cmd> <player> <parameter> where cmd - bungee action command, see below player - player to execute action for parameter - parameter if required by command","title":"Setup"},{"location":"playing/bungee_actions/#available-commands","text":"server - transfers player to another server (parameter: server name) message - sends message to the player message_raw - sends message to the player in tellraw format kick - kicks player (parameter: reason for kick)","title":"Available commands"},{"location":"playing/bungee_actions/#server-redirect","text":"Your browser does not support the video element.","title":"Server redirect"},{"location":"playing/equipment/","text":"Equiping Taterzens Gear 'em up! Running /npc edit equipment will put you in equipment editor mode. You now have have the following options * Right click NPC to equip them the item you're holding * Punch it to swap its hand items * Shift-right-click to put a piece equipment * Shift-right-click with empty hand clear equipment Your browser does not support the video element. If you want them to drop equipment on death (not removal ), run /npc edit equipment allowEquipmentDrops true","title":"Equipment"},{"location":"playing/equipment/#equiping-taterzens","text":"","title":"Equiping Taterzens"},{"location":"playing/equipment/#gear-em-up","text":"Running /npc edit equipment will put you in equipment editor mode. You now have have the following options * Right click NPC to equip them the item you're holding * Punch it to swap its hand items * Shift-right-click to put a piece equipment * Shift-right-click with empty hand clear equipment Your browser does not support the video element. If you want them to drop equipment on death (not removal ), run /npc edit equipment allowEquipmentDrops true","title":"Gear 'em up!"},{"location":"playing/nametags/","text":"Nametags Hiding / showing names Do you need npc's name above head to be hidden? You have the following options add Taterzen to a team and set a nametag visibility team rule use a built-in command (this won't support changing poses ) /npc edit tags showCustomName false","title":"Nametags"},{"location":"playing/nametags/#nametags","text":"","title":"Nametags"},{"location":"playing/nametags/#hiding-showing-names","text":"Do you need npc's name above head to be hidden? You have the following options add Taterzen to a team and set a nametag visibility team rule use a built-in command (this won't support changing poses ) /npc edit tags showCustomName false","title":"Hiding / showing names"},{"location":"playing/path/","text":"Path Path Setting path nodes Path nodes are targets where Taterzen will move. To edit those, you need to enter the path editor by running /npc edit path (To exit the editor, run the same command again.) 1. Adding blocks To add a block to path, simply left click on it. It will temporarily be switched to redstone block. 2. Removing blocks To remove a block from path, right click on it. Clear whole path To remove all nodes, run /npc edit path clear You'd probably want to set the movement to NONE as well. Your browser does not support the video element.","title":"Path"},{"location":"playing/path/#path","text":"","title":"Path"},{"location":"playing/path/#path_1","text":"","title":"Path"},{"location":"playing/path/#setting-path-nodes","text":"Path nodes are targets where Taterzen will move. To edit those, you need to enter the path editor by running /npc edit path (To exit the editor, run the same command again.)","title":"Setting path nodes"},{"location":"playing/path/#1-adding-blocks","text":"To add a block to path, simply left click on it. It will temporarily be switched to redstone block.","title":"1. Adding blocks"},{"location":"playing/path/#2-removing-blocks","text":"To remove a block from path, right click on it.","title":"2. Removing blocks"},{"location":"playing/path/#clear-whole-path","text":"To remove all nodes, run /npc edit path clear You'd probably want to set the movement to NONE as well. Your browser does not support the video element.","title":"Clear whole path"},{"location":"playing/poses/","text":"Posing Taterzens Cusom poses Taterzens support changing their pose /npc edit pose <pose to use> When entity type is set to PLAYER , \"working\" poses are standing (default) swimming sneaking / crouching sleeping other poses usually just change the name position and do not appear visually different. Your browser does not support the video element.","title":"Poses"},{"location":"playing/poses/#posing-taterzens","text":"","title":"Posing Taterzens"},{"location":"playing/poses/#cusom-poses","text":"Taterzens support changing their pose /npc edit pose <pose to use> When entity type is set to PLAYER , \"working\" poses are standing (default) swimming sneaking / crouching sleeping other poses usually just change the name position and do not appear visually different. Your browser does not support the video element.","title":"Cusom poses"},{"location":"playing/showcase/","text":"Creating quests Below is a video with simple dialogue / quest. If you're interested how it's made, download out the world , used in video. Your browser does not support the video element.","title":"Dialogue showcase"},{"location":"playing/showcase/#creating-quests","text":"Below is a video with simple dialogue / quest. If you're interested how it's made, download out the world , used in video. Your browser does not support the video element.","title":"Creating quests"},{"location":"playing/skins/","text":"Changing skins Default (built-in) skin swapping By player name. Taterzens mod supports setting custom skins to NPCs if their type is set to PLAYER . All skins are cached after being set, meaning that they will stay the same even if player that skin was fetched from changes their skin . You can set any skin from any minecraft player using /npc edit skin <minecraft player name> From mineskin . Visit mineskin.org site Upload the skin you want for taterzen / use a player name. Click on generate & copy URL Enter the command /npc edit skin <your mineskin URL> E.g. /npc edit skin https://www.mineskin.org/1234 Skin layers To set custom skin layers to Taterzen, use /npc edit skin It will copy your skin settings to Taterzen. Your browser does not support the video element. Custom skins This is similar to mineskin section. To use the skins to their fullest potential, you will need to install FabricTailor mod. After installing it, select the desired NPC you wish to change skin for. When having a Taterzen selected, simply run FabricTailor's /skin command /skin set <follow the wiki or brigadier suggestions>","title":"Skins"},{"location":"playing/skins/#changing-skins","text":"","title":"Changing skins"},{"location":"playing/skins/#default-built-in-skin-swapping","text":"By player name. Taterzens mod supports setting custom skins to NPCs if their type is set to PLAYER . All skins are cached after being set, meaning that they will stay the same even if player that skin was fetched from changes their skin . You can set any skin from any minecraft player using /npc edit skin <minecraft player name> From mineskin . Visit mineskin.org site Upload the skin you want for taterzen / use a player name. Click on generate & copy URL Enter the command /npc edit skin <your mineskin URL> E.g. /npc edit skin https://www.mineskin.org/1234","title":"Default (built-in) skin swapping"},{"location":"playing/skins/#skin-layers","text":"To set custom skin layers to Taterzen, use /npc edit skin It will copy your skin settings to Taterzen. Your browser does not support the video element.","title":"Skin layers"},{"location":"playing/skins/#custom-skins","text":"This is similar to mineskin section. To use the skins to their fullest potential, you will need to install FabricTailor mod. After installing it, select the desired NPC you wish to change skin for. When having a Taterzen selected, simply run FabricTailor's /skin command /skin set <follow the wiki or brigadier suggestions>","title":"Custom skins"},{"location":"playing/sounds/","text":"Changing sounds Those sounds are annoying Wanna turn off the sounds for the Taterzen? Simply type /npc edit tags allowSounds false this will mute Taterzen. Changing global sounds You'll need to open config file found in .minecraft/config/Taterzens/config.json . Open it with any text editor (although I recommend something like Notepad++) and edit the following values: \"death_sounds\": [ \"my.custom.sound\", \"another.custom.sound\" ], \"hurt_sounds\": [ \"entity.player.hurt\" ], \"ambient_sounds\": [] Empty array ( [] ) means no sound. If there is more than one sound, it will be chosen randomly.","title":"Sounds"},{"location":"playing/sounds/#changing-sounds","text":"","title":"Changing sounds"},{"location":"playing/sounds/#those-sounds-are-annoying","text":"Wanna turn off the sounds for the Taterzen? Simply type /npc edit tags allowSounds false this will mute Taterzen.","title":"Those sounds are annoying"},{"location":"playing/sounds/#changing-global-sounds","text":"You'll need to open config file found in .minecraft/config/Taterzens/config.json . Open it with any text editor (although I recommend something like Notepad++) and edit the following values: \"death_sounds\": [ \"my.custom.sound\", \"another.custom.sound\" ], \"hurt_sounds\": [ \"entity.player.hurt\" ], \"ambient_sounds\": [] Empty array ( [] ) means no sound. If there is more than one sound, it will be chosen randomly.","title":"Changing global sounds"},{"location":"playing/types/","text":"Entity Types Changing the type of Taterzen You'l need to install DisguiseLib mod. Taterzens mod supports all vanilla entities (except for fishing bober). Modded ones should work as well. To change the type of the Taterzen, simply use the following command /npc edit type <entity type>","title":"Entity Types"},{"location":"playing/types/#entity-types","text":"","title":"Entity Types"},{"location":"playing/types/#changing-the-type-of-taterzen","text":"You'l need to install DisguiseLib mod. Taterzens mod supports all vanilla entities (except for fishing bober). Modded ones should work as well. To change the type of the Taterzen, simply use the following command /npc edit type <entity type>","title":"Changing the type of Taterzen"},{"location":"playing/behaviour/","text":"Behaviour editing Changing the behaviour Getting UUID An easy way to get the uuid of a Taterzen is to have your crosshairs focused on the Taterzen when typing out the command. Then, you can use tab completion and the uuid will be suggested. Default Taterzen behaviour will be passive . It's up to you whether you dare to change it. If you use any other types than the default one, you'd probably want to change their invulnerable status as well. To achieve that, use /data merge entity <taterzen uuid> {Invulnerable:1b} 1b = true 0b = false Teaming them up Taterzen teams use the vanilla teams system. For extra docs on the team command, see the wiki . To create and add taterzens to a team, you can simply do /team add teamName /team join teamName <taterzen uuid> Taterzens will never attack another entity on the same team , but if you're not on their team, watch out!","title":"Changing Behaviour"},{"location":"playing/behaviour/#behaviour-editing","text":"","title":"Behaviour editing"},{"location":"playing/behaviour/#changing-the-behaviour","text":"Getting UUID An easy way to get the uuid of a Taterzen is to have your crosshairs focused on the Taterzen when typing out the command. Then, you can use tab completion and the uuid will be suggested. Default Taterzen behaviour will be passive . It's up to you whether you dare to change it. If you use any other types than the default one, you'd probably want to change their invulnerable status as well. To achieve that, use /data merge entity <taterzen uuid> {Invulnerable:1b} 1b = true 0b = false","title":"Changing the behaviour"},{"location":"playing/behaviour/#teaming-them-up","text":"Taterzen teams use the vanilla teams system. For extra docs on the team command, see the wiki . To create and add taterzens to a team, you can simply do /team add teamName /team join teamName <taterzen uuid> Taterzens will never attack another entity on the same team , but if you're not on their team, watch out!","title":"Teaming them up"},{"location":"playing/behaviour/defensive/","text":"Defensive Behaviour Make them take care of themselves The defensive mechanism will make Taterzen target the mob that attacked it. /npc edit behaviour DEFENSIVE Your browser does not support the video element.","title":"Defensive Behaviour"},{"location":"playing/behaviour/defensive/#defensive-behaviour","text":"","title":"Defensive Behaviour"},{"location":"playing/behaviour/defensive/#make-them-take-care-of-themselves","text":"The defensive mechanism will make Taterzen target the mob that attacked it. /npc edit behaviour DEFENSIVE Your browser does not support the video element.","title":"Make them take care of themselves"},{"location":"playing/behaviour/friendly/","text":"Friendly Behaviour Kill those zombies! Taterzens with friendly behaviour will target any monsters that dare to come around. /npc edit behaviour FRIENDLY Your browser does not support the video element.","title":"Friendly Behaviour"},{"location":"playing/behaviour/friendly/#friendly-behaviour","text":"","title":"Friendly Behaviour"},{"location":"playing/behaviour/friendly/#kill-those-zombies","text":"Taterzens with friendly behaviour will target any monsters that dare to come around. /npc edit behaviour FRIENDLY Your browser does not support the video element.","title":"Kill those zombies!"},{"location":"playing/behaviour/hostile/","text":"Hostile Behaviour Oh no, they wanna rule the world! It was a lovely day until I wrote /npc edit behaviour HOSTILE in chat. A warrior-like NPC creature has started attacking all living entites. Not even armor stands were excluded! I had to run away, otherwise I'd be its next prey. Don't make the same mistake. I don't even know why I told you the above line ... Your browser does not support the video element.","title":"Hostile Behaviour"},{"location":"playing/behaviour/hostile/#hostile-behaviour","text":"","title":"Hostile Behaviour"},{"location":"playing/behaviour/hostile/#oh-no-they-wanna-rule-the-world","text":"It was a lovely day until I wrote /npc edit behaviour HOSTILE in chat. A warrior-like NPC creature has started attacking all living entites. Not even armor stands were excluded! I had to run away, otherwise I'd be its next prey. Don't make the same mistake. I don't even know why I told you the above line ... Your browser does not support the video element.","title":"Oh no, they wanna rule the world!"},{"location":"playing/behaviour/passive/","text":"Passive Behaviour I don't wanna hurt anyone! If you have problems with Taterzen being too aggressive, use /npc edit behaviour PASSIVE It will calm down the selected one.","title":"Passive Behaviour"},{"location":"playing/behaviour/passive/#passive-behaviour","text":"","title":"Passive Behaviour"},{"location":"playing/behaviour/passive/#i-dont-wanna-hurt-anyone","text":"If you have problems with Taterzen being too aggressive, use /npc edit behaviour PASSIVE It will calm down the selected one.","title":"I don't wanna hurt anyone!"},{"location":"playing/command_actions/","text":"Command Actions Right-click command actions Taterzens support executing multiple commands on click from version 0.3.0 . Commands allow you to tp players, give them stuff etc. Even more, you can target the Taterzen itself, random player or all players! They can even edit themselves via commands that they execute! See the following video for example. Your browser does not support the video element. To see all the commands that will be run when Taterzen is right-clicked, use /npc edit commands list Permission levels (aka Why did my command not work? ) Default permission level for newly-spawned-in NPCs can be found in config . If you'd like to keep a Taterzen to execute non-op commands only, you'd type: /npc edit commands setPermissionLevel 0 If you'd like to have op status, set their permission level to 4 /npc edit commands setPermissionLevel 4 Targeting the clicker In most cases you'd probably like to target the player who clicked the NPC. In theory you could use the @p target selector but that targets the nearest player , who is not neccesarily the one who interacted with the Taterzen. Using @s will target Taterzen itself! Instead of that, you can use --clicker-- , mod will replace any occurences with the player's name when executing the command. Giving the clicker a gold ingot: /npc edit commands give --clicker-- gold_ingot Teleporting the clicker 10 blocks up: /npc edit commands add execute at --clicker-- run tp --clicker-- ~ ~10 ~ Your browser does not support the video element.","title":"Right-click Actions"},{"location":"playing/command_actions/#command-actions","text":"","title":"Command Actions"},{"location":"playing/command_actions/#right-click-command-actions","text":"Taterzens support executing multiple commands on click from version 0.3.0 . Commands allow you to tp players, give them stuff etc. Even more, you can target the Taterzen itself, random player or all players! They can even edit themselves via commands that they execute! See the following video for example. Your browser does not support the video element. To see all the commands that will be run when Taterzen is right-clicked, use /npc edit commands list","title":"Right-click command actions"},{"location":"playing/command_actions/#permission-levels","text":"(aka Why did my command not work? ) Default permission level for newly-spawned-in NPCs can be found in config . If you'd like to keep a Taterzen to execute non-op commands only, you'd type: /npc edit commands setPermissionLevel 0 If you'd like to have op status, set their permission level to 4 /npc edit commands setPermissionLevel 4","title":"Permission levels"},{"location":"playing/command_actions/#targeting-the-clicker","text":"In most cases you'd probably like to target the player who clicked the NPC. In theory you could use the @p target selector but that targets the nearest player , who is not neccesarily the one who interacted with the Taterzen. Using @s will target Taterzen itself! Instead of that, you can use --clicker-- , mod will replace any occurences with the player's name when executing the command. Giving the clicker a gold ingot: /npc edit commands give --clicker-- gold_ingot Teleporting the clicker 10 blocks up: /npc edit commands add execute at --clicker-- run tp --clicker-- ~ ~10 ~ Your browser does not support the video element.","title":"Targeting the clicker"},{"location":"playing/command_actions/creating_action/","text":"New right-click command action Adding new command to Taterzen It's as simple as using /npc edit commands add <command> Note: all commands that are added are executed AT ONCE when NPC is interacted with. Your browser does not support the video element. I want to target the player who interacted with my NPC! You're in luck! There is built-in --clicker-- target, which is replaced by the name of the player that has right clicked the NPC. Let's suppose player with name samo_lego interacts with the NPC that we previously added the following command: /npc edit commands add give --clicker-- sunflower{display:{Name:'{\"text\":\"--clicker--'s coin\"}'}} The command Taterzen will execute will change to the following: /give samo_lego sunflower{display:{Name:'{\"text\":\"samo_lego's coin\"}'}} 1 And our player will get a Sunflower item with the name samo_lego's coin .","title":"Adding Command Actions"},{"location":"playing/command_actions/creating_action/#new-right-click-command-action","text":"","title":"New right-click command action"},{"location":"playing/command_actions/creating_action/#adding-new-command-to-taterzen","text":"It's as simple as using /npc edit commands add <command> Note: all commands that are added are executed AT ONCE when NPC is interacted with. Your browser does not support the video element.","title":"Adding new command to Taterzen"},{"location":"playing/command_actions/creating_action/#i-want-to-target-the-player-who-interacted-with-my-npc","text":"You're in luck! There is built-in --clicker-- target, which is replaced by the name of the player that has right clicked the NPC. Let's suppose player with name samo_lego interacts with the NPC that we previously added the following command: /npc edit commands add give --clicker-- sunflower{display:{Name:'{\"text\":\"--clicker--'s coin\"}'}} The command Taterzen will execute will change to the following: /give samo_lego sunflower{display:{Name:'{\"text\":\"samo_lego's coin\"}'}} 1 And our player will get a Sunflower item with the name samo_lego's coin .","title":"I want to target the player who interacted with my NPC!"},{"location":"playing/command_actions/editing_actions/","text":"Editing actions Oh no, I don't want that command anymore! Check the command id by running /npc edit commands list Taterzen Taterzen will execute the following commands on right-click. 1-> give @r diamond X 2-> tp --clicker-- ~ ~10 ~ X 3-> msg @a I'm broke now! X Then click on the command you'd like to remove or type /npc edit commands remove <id> Deleting all commands To clear all the commands, run /npc edit commands clear","title":"Editing Actions"},{"location":"playing/command_actions/editing_actions/#editing-actions","text":"","title":"Editing actions"},{"location":"playing/command_actions/editing_actions/#oh-no-i-dont-want-that-command-anymore","text":"Check the command id by running /npc edit commands list Taterzen Taterzen will execute the following commands on right-click. 1-> give @r diamond X 2-> tp --clicker-- ~ ~10 ~ X 3-> msg @a I'm broke now! X Then click on the command you'd like to remove or type /npc edit commands remove <id>","title":"Oh no, I don't want that command anymore!"},{"location":"playing/command_actions/editing_actions/#deleting-all-commands","text":"To clear all the commands, run /npc edit commands clear","title":"Deleting all commands"},{"location":"playing/commands/npc_command/","text":"npc command What does it do? It helps you manage the NPCs. Make sure you have selected the NPC before doing edits. Creating /npc create <name of the NPC> - Creates a Taterzen NPC and selects it. Removing /npc remove - Removes the selected Taterzen NPC. Teleporting /npc tp <destination> - Teleports the selected NPC to the desired location. * <destination> can be an entity or a set of relative / absolute coordinates Listing /npc list - Lists available (loaded) NPCs. Selecting You can select NPCs by their ID or based on proximity and look direction. Id Run /npc list to view the IDs of available NPCs. Run /npc select id <ID> to select it. Distance Stand in front of the NPC you want to select. Run /npc select to select it. Editing You can change many aspects of the NPC, e.g. its entity type, skin, pose, name, messages, right-click actions etc.","title":"npc command"},{"location":"playing/commands/npc_command/#npc-command","text":"","title":"npc command"},{"location":"playing/commands/npc_command/#what-does-it-do","text":"It helps you manage the NPCs. Make sure you have selected the NPC before doing edits.","title":"What does it do?"},{"location":"playing/commands/npc_command/#creating","text":"/npc create <name of the NPC> - Creates a Taterzen NPC and selects it.","title":"Creating"},{"location":"playing/commands/npc_command/#removing","text":"/npc remove - Removes the selected Taterzen NPC.","title":"Removing"},{"location":"playing/commands/npc_command/#teleporting","text":"/npc tp <destination> - Teleports the selected NPC to the desired location. * <destination> can be an entity or a set of relative / absolute coordinates","title":"Teleporting"},{"location":"playing/commands/npc_command/#listing","text":"/npc list - Lists available (loaded) NPCs.","title":"Listing"},{"location":"playing/commands/npc_command/#selecting","text":"You can select NPCs by their ID or based on proximity and look direction.","title":"Selecting"},{"location":"playing/commands/npc_command/#id","text":"Run /npc list to view the IDs of available NPCs. Run /npc select id <ID> to select it.","title":"Id"},{"location":"playing/commands/npc_command/#distance","text":"Stand in front of the NPC you want to select. Run /npc select to select it.","title":"Distance"},{"location":"playing/commands/npc_command/#editing","text":"You can change many aspects of the NPC, e.g. its entity type, skin, pose, name, messages, right-click actions etc.","title":"Editing"},{"location":"playing/commands/taterzens_command/","text":"taterzens command What does it do? This command is intended for admins-only. Currently it allows to reload the config file and edit the language to use.","title":"taterzens command"},{"location":"playing/commands/taterzens_command/#taterzens-command","text":"","title":"taterzens command"},{"location":"playing/commands/taterzens_command/#what-does-it-do","text":"This command is intended for admins-only. Currently it allows to reload the config file and edit the language to use.","title":"What does it do?"},{"location":"playing/messages/","text":"Messages Make them speak! Taterzens are simple creatures; you enter their message editor and they will remember things you send in chat. You can edit those messages later or even delete them, if you don't like them anymore. /npc edit messages list will show you all the messages of selected Taterzen. Your browser does not support the video element. And then? The NPC will send those messages to any player in range, with a certain delay. It can be changed in config, look for the messageDelay option.","title":"Messages"},{"location":"playing/messages/#messages","text":"","title":"Messages"},{"location":"playing/messages/#make-them-speak","text":"Taterzens are simple creatures; you enter their message editor and they will remember things you send in chat. You can edit those messages later or even delete them, if you don't like them anymore. /npc edit messages list will show you all the messages of selected Taterzen. Your browser does not support the video element.","title":"Make them speak!"},{"location":"playing/messages/#and-then","text":"The NPC will send those messages to any player in range, with a certain delay. It can be changed in config, look for the messageDelay option.","title":"And then?"},{"location":"playing/messages/message_creation/","text":"Creating new messages Adding new messages to Taterzen Running /npc edit messages will send you this: You've entered message editor for Taterzen . Enter same command to exit. Send messages in chat and Taterzen will repeat them. You can use normal text or tellraw structure (for colors). That means that any messages you send to chat will be redirected to Taterzen's to-say list instead. I want colored messages! No problem, Taterzens mod has you covered! It supports tellraw json text format as well. Generate any tellraw command with the text you want. There are online tools that can do it, I recommend using MCStacker . /tellraw @p {\"text\":\"Discord invite!\",\"color\":\"gold\",\"bold\":true,\"italic\":true,\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://discord.gg/9PAesuHFnp\"}} This would send a following-like text: Discord invite! Copy all text from first { all the way to the end. {\"text\":\"Discord invite!\",\"color\":\"gold\",\"bold\":true,\"italic\":true,\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://discord.gg/9PAesuHFnp\"}} Send it in chat and NPC will parse it.","title":"Creating messages"},{"location":"playing/messages/message_creation/#creating-new-messages","text":"","title":"Creating new messages"},{"location":"playing/messages/message_creation/#adding-new-messages-to-taterzen","text":"Running /npc edit messages will send you this: You've entered message editor for Taterzen . Enter same command to exit. Send messages in chat and Taterzen will repeat them. You can use normal text or tellraw structure (for colors). That means that any messages you send to chat will be redirected to Taterzen's to-say list instead.","title":"Adding new messages to Taterzen"},{"location":"playing/messages/message_creation/#i-want-colored-messages","text":"No problem, Taterzens mod has you covered! It supports tellraw json text format as well. Generate any tellraw command with the text you want. There are online tools that can do it, I recommend using MCStacker . /tellraw @p {\"text\":\"Discord invite!\",\"color\":\"gold\",\"bold\":true,\"italic\":true,\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://discord.gg/9PAesuHFnp\"}} This would send a following-like text: Discord invite! Copy all text from first { all the way to the end. {\"text\":\"Discord invite!\",\"color\":\"gold\",\"bold\":true,\"italic\":true,\"clickEvent\":{\"action\":\"open_url\",\"value\":\"https://discord.gg/9PAesuHFnp\"}} Send it in chat and NPC will parse it.","title":"I want colored messages!"},{"location":"playing/messages/message_editing/","text":"Editing messages Oh no, I've made a typo! How do I fix it? Check the message id by running /npc edit messages list Taterzen Taterzen has the following messages. Click on one to edit it. 1-> Discord invite! X 2-> Second message. X 3-> Yet another message ... X Click on the message you'd like to edit or run /npc edit messages <id> Type the new message in chat and send it. Deleting messages Simply run /npc edit messages <id> delete to delete the message with id <id> . Or click the X next to the message when listing them. To clear all the messages, run /npc edit messages clear","title":"Editing messages"},{"location":"playing/messages/message_editing/#editing-messages","text":"","title":"Editing messages"},{"location":"playing/messages/message_editing/#oh-no-ive-made-a-typo-how-do-i-fix-it","text":"Check the message id by running /npc edit messages list Taterzen Taterzen has the following messages. Click on one to edit it. 1-> Discord invite! X 2-> Second message. X 3-> Yet another message ... X Click on the message you'd like to edit or run /npc edit messages <id> Type the new message in chat and send it.","title":"Oh no, I've made a typo! How do I fix it?"},{"location":"playing/messages/message_editing/#deleting-messages","text":"Simply run /npc edit messages <id> delete to delete the message with id <id> . Or click the X next to the message when listing them. To clear all the messages, run /npc edit messages clear","title":"Deleting messages"},{"location":"playing/movement/","text":"Movement Taking care of fitness Since Taterzens extend the Minecraft's vanilla PathfinderMob , they can perform pathfinding. Movement of Taterzens could be divided in 3 categories: free movement (Wandering around, random looking, following the path with rests) strict movement (Non-stop following the path / looking at the player) follow movement (Following specified targets) If you don't want the Taterzen to move, you can use /npc edit movement NONE (default).","title":"Movement"},{"location":"playing/movement/#movement","text":"","title":"Movement"},{"location":"playing/movement/#taking-care-of-fitness","text":"Since Taterzens extend the Minecraft's vanilla PathfinderMob , they can perform pathfinding. Movement of Taterzens could be divided in 3 categories: free movement (Wandering around, random looking, following the path with rests) strict movement (Non-stop following the path / looking at the player) follow movement (Following specified targets) If you don't want the Taterzen to move, you can use /npc edit movement NONE (default).","title":"Taking care of fitness"},{"location":"playing/movement/follow_movement/","text":"Follow Movement Oh, they're like pets! Specifying any target /npc edit movement FOLLOW <target to follow> Specifying specific target /npc edit movement FOLLOW UUID <uuid of the target to follow>","title":"Follow Movement"},{"location":"playing/movement/follow_movement/#follow-movement","text":"","title":"Follow Movement"},{"location":"playing/movement/follow_movement/#oh-theyre-like-pets","text":"Specifying any target /npc edit movement FOLLOW <target to follow> Specifying specific target /npc edit movement FOLLOW UUID <uuid of the target to follow>","title":"Oh, they're like pets!"},{"location":"playing/movement/free_movement/","text":"Free Movement We have our own rights! If you have a non-escapable area, you can use the following command /npc edit movement FREE as it makes the Taterzen move around freely with no restrictions. Your browser does not support the video element. For following the path but enabling long rests and looking around, use /npc edit movement PATH","title":"Free Movement"},{"location":"playing/movement/free_movement/#free-movement","text":"","title":"Free Movement"},{"location":"playing/movement/free_movement/#we-have-our-own-rights","text":"If you have a non-escapable area, you can use the following command /npc edit movement FREE as it makes the Taterzen move around freely with no restrictions. Your browser does not support the video element. For following the path but enabling long rests and looking around, use /npc edit movement PATH","title":"We have our own rights!"},{"location":"playing/movement/strict_movement/","text":"Strict Movement When you'd like them to follow your orders Making a Taterzen look at a player in radious of 4 blocks /npc edit movement FORCED_LOOK Your browser does not support the video element. For following the path strictly with no rests /npc edit movement FORCED_PATH","title":"Strict Movement"},{"location":"playing/movement/strict_movement/#strict-movement","text":"","title":"Strict Movement"},{"location":"playing/movement/strict_movement/#when-youd-like-them-to-follow-your-orders","text":"Making a Taterzen look at a player in radious of 4 blocks /npc edit movement FORCED_LOOK Your browser does not support the video element. For following the path strictly with no rests /npc edit movement FORCED_PATH","title":"When you'd like them to follow your orders"},{"location":"professions/","text":"Using code to maximize potential What is Taterzen Profession API? Profession API allows you to create a new profession for use with Taterzens mod. Each Taterzen can have as many professions as you want, but they might clash with each other.","title":"API"},{"location":"professions/#using-code-to-maximize-potential","text":"","title":"Using code to maximize potential"},{"location":"professions/#what-is-taterzen-profession-api","text":"Profession API allows you to create a new profession for use with Taterzens mod. Each Taterzen can have as many professions as you want, but they might clash with each other.","title":"What is Taterzen Profession API?"},{"location":"professions/assigning_professions/","text":"Assigning professions (in-game) Giving Taterzen a profession /npc edit professions add <profession id> Profession IDs will be automatically generated for each profession that was registered by mod developers. By default, there are no profession mods available, but this might change in future :). Listing current professions /npc edit professions list This will print all the professions of Taterzen to chat. You can click on the X to remove profession from Taterzen. Removing professions As said above, you can click on the X next to the profession ResourceLocation to remove it. But you can also use /npc edit professions remove <profession id>","title":"Assigning professions"},{"location":"professions/assigning_professions/#assigning-professions-in-game","text":"","title":"Assigning professions (in-game)"},{"location":"professions/assigning_professions/#giving-taterzen-a-profession","text":"/npc edit professions add <profession id> Profession IDs will be automatically generated for each profession that was registered by mod developers. By default, there are no profession mods available, but this might change in future :).","title":"Giving Taterzen a profession"},{"location":"professions/assigning_professions/#listing-current-professions","text":"/npc edit professions list This will print all the professions of Taterzen to chat. You can click on the X to remove profession from Taterzen.","title":"Listing current professions"},{"location":"professions/assigning_professions/#removing-professions","text":"As said above, you can click on the X next to the profession ResourceLocation to remove it. But you can also use /npc edit professions remove <profession id>","title":"Removing professions"},{"location":"professions/scarpet_profession/","text":"Hello scarpet world? Note This is curently only available on Fabric. Note You'll need to install CarpetMod . Script profession installation Download the script professions you want and put them in minecraft-folder/world/scripts . Run the server / singleplayer. Make sure the script is loaded ( /script load <script name> ). (To autoload the scripts, use /carpet setDefault scriptsAutoload true ) Give taterzen the taterzens:scarpet_profession ( /npc edit professions add taterzens:scarpet_profession ). Creating a merchant Download the merchant script and load it using the steps described above. Your browser does not support the video element. Now you can trade: 16 oak_log(s) for 3 emerald(s) 32 stone for 2 gold . Modifying scripts Do you want to add trades to the above example? Simply add new items in the global_item_map . global_item_map = { // Takes 32 stone and gives 2 gold 'stone' -> { 'take_count'-> 32, 'trade_item'-> 'gold', 'trade_count'-> 2 }, // Takes 16 oak_log(s) and gives 3 emerald(s) 'oak_log' -> { 'take_count'-> 16, 'trade_item'-> 'emerald', 'trade_count'-> 3 - } + }, + // Takes 1 dirt and gives 64 diamond. Stonks! + 'dirt' -> { + 'take_count'-> 1, + 'trade_item'-> 'diamond', + 'trade_count'-> 64 + } }; Also check out scarpet wiki and docs for help with custom script creation.","title":"Scarpet Profession"},{"location":"professions/scarpet_profession/#hello-scarpet-world","text":"Note This is curently only available on Fabric. Note You'll need to install CarpetMod .","title":"Hello scarpet world?"},{"location":"professions/scarpet_profession/#script-profession-installation","text":"Download the script professions you want and put them in minecraft-folder/world/scripts . Run the server / singleplayer. Make sure the script is loaded ( /script load <script name> ). (To autoload the scripts, use /carpet setDefault scriptsAutoload true ) Give taterzen the taterzens:scarpet_profession ( /npc edit professions add taterzens:scarpet_profession ).","title":"Script profession installation"},{"location":"professions/scarpet_profession/#creating-a-merchant","text":"Download the merchant script and load it using the steps described above. Your browser does not support the video element. Now you can trade: 16 oak_log(s) for 3 emerald(s) 32 stone for 2 gold .","title":"Creating a merchant"},{"location":"professions/scarpet_profession/#modifying-scripts","text":"Do you want to add trades to the above example? Simply add new items in the global_item_map . global_item_map = { // Takes 32 stone and gives 2 gold 'stone' -> { 'take_count'-> 32, 'trade_item'-> 'gold', 'trade_count'-> 2 }, // Takes 16 oak_log(s) and gives 3 emerald(s) 'oak_log' -> { 'take_count'-> 16, 'trade_item'-> 'emerald', 'trade_count'-> 3 - } + }, + // Takes 1 dirt and gives 64 diamond. Stonks! + 'dirt' -> { + 'take_count'-> 1, + 'trade_item'-> 'diamond', + 'trade_count'-> 64 + } }; Also check out scarpet wiki and docs for help with custom script creation.","title":"Modifying scripts"},{"location":"professions/java/coding_professions/","text":"Hello world? Whether you are an experienced programmer or a beginner, you should (hopefully) be able to understand how to create a simple profession. A sample repository with the profession is available on GitHub . Creating your own profession class First off, create a class implementing TaterzenProfession interface (found in org.samo_lego.taterzens.api.professions ). Create a unique ResourceLocation for your profession as well, as we will need it later. import org.samo_lego.taterzens.npc.TaterzenNPC ; public class MyFirstProfession implements TaterzenProfession { public static final ResourceLocation ID = new ResourceLocation ( \"your_mod_id\" , \"my_profession\" ); } You will then need to implement the methods. If you don't want to change certain behaviours, just leave those empty. If you don't know what certain methods mean, you can always check out code docs . For methods using InteractionResult , your return variable can mean the following: InteractionResult#PASS - Default; continues ticking other professions. InteractionResult#CONSUME - Stops processing others, but continues with base Taterzen movement tick. InteractionResult#FAIL - Stops whole movement tick. InteractionResult#SUCCESS - Continues with super.tickMovement(), but skips Taterzen's movement tick. The base method you need to implement is create(TaterzenNPC) . This should create a new profession object for the passed Taterzen and return it. See the below example. public class MyFirstProfession implements TaterzenProfession { public static final ResourceLocation ID = new ResourceLocation ( MODID , \"my_profession\" ); private TaterzenNPC npc ; /** * Deafult constructor. Will be used to register our profession later. * A profession created with this constructor isn't really useful, as it doesn't * have a Taterzen assigned to it. * That's why we need another {@link MyFirstProfession#create(TaterzenNPC)}. */ public MyFirstProfession () { } @Override public InteractionResult interactAt ( Player player , Vec3d pos , Hand hand ) { player . sendMessage ( new TextComponent ( \"You have interacted with \" ). append ( this . npc . getName ()), false ); return InteractionResult . PASS ; } /** * Method used for creating the new profession for given taterzen. * * @param taterzen taterzen to create profession for * @return new profession object of taterzen. */ @Override public TaterzenProfession create ( TaterzenNPC taterzen ) { MyFirstProfession profession = new MyFirstProfession (); // Assigning the Taterzen to the profession so we can use it later. profession . npc = taterzen ; return profession ; } } Registering profession The last step you have to do is to register all your profession types. There's a method in TaterzensAPI class that you can use. import org.samo_lego.taterzens.api.TaterzensAPI ; import my.custom.package.MyFirstProfession ; public class MyProfessionsMod { public static final String MODID = \"taterzens\" ; /** * Put this in initialisation method of your mod. * Those are different if you're using forge / fabric. */ public static void onInitialize () { // Profession registering TaterzensAPI . registerProfession ( MyFirstProfession . ID , new MyFirstProfession ()); } }","title":"Coding Profession"},{"location":"professions/java/coding_professions/#hello-world","text":"Whether you are an experienced programmer or a beginner, you should (hopefully) be able to understand how to create a simple profession. A sample repository with the profession is available on GitHub .","title":"Hello world?"},{"location":"professions/java/coding_professions/#creating-your-own-profession-class","text":"First off, create a class implementing TaterzenProfession interface (found in org.samo_lego.taterzens.api.professions ). Create a unique ResourceLocation for your profession as well, as we will need it later. import org.samo_lego.taterzens.npc.TaterzenNPC ; public class MyFirstProfession implements TaterzenProfession { public static final ResourceLocation ID = new ResourceLocation ( \"your_mod_id\" , \"my_profession\" ); } You will then need to implement the methods. If you don't want to change certain behaviours, just leave those empty. If you don't know what certain methods mean, you can always check out code docs . For methods using InteractionResult , your return variable can mean the following: InteractionResult#PASS - Default; continues ticking other professions. InteractionResult#CONSUME - Stops processing others, but continues with base Taterzen movement tick. InteractionResult#FAIL - Stops whole movement tick. InteractionResult#SUCCESS - Continues with super.tickMovement(), but skips Taterzen's movement tick. The base method you need to implement is create(TaterzenNPC) . This should create a new profession object for the passed Taterzen and return it. See the below example. public class MyFirstProfession implements TaterzenProfession { public static final ResourceLocation ID = new ResourceLocation ( MODID , \"my_profession\" ); private TaterzenNPC npc ; /** * Deafult constructor. Will be used to register our profession later. * A profession created with this constructor isn't really useful, as it doesn't * have a Taterzen assigned to it. * That's why we need another {@link MyFirstProfession#create(TaterzenNPC)}. */ public MyFirstProfession () { } @Override public InteractionResult interactAt ( Player player , Vec3d pos , Hand hand ) { player . sendMessage ( new TextComponent ( \"You have interacted with \" ). append ( this . npc . getName ()), false ); return InteractionResult . PASS ; } /** * Method used for creating the new profession for given taterzen. * * @param taterzen taterzen to create profession for * @return new profession object of taterzen. */ @Override public TaterzenProfession create ( TaterzenNPC taterzen ) { MyFirstProfession profession = new MyFirstProfession (); // Assigning the Taterzen to the profession so we can use it later. profession . npc = taterzen ; return profession ; } }","title":"Creating your own profession class"},{"location":"professions/java/coding_professions/#registering-profession","text":"The last step you have to do is to register all your profession types. There's a method in TaterzensAPI class that you can use. import org.samo_lego.taterzens.api.TaterzensAPI ; import my.custom.package.MyFirstProfession ; public class MyProfessionsMod { public static final String MODID = \"taterzens\" ; /** * Put this in initialisation method of your mod. * Those are different if you're using forge / fabric. */ public static void onInitialize () { // Profession registering TaterzensAPI . registerProfession ( MyFirstProfession . ID , new MyFirstProfession ()); } }","title":"Registering profession"},{"location":"professions/java/profession_commands/","text":"Expanding profession abilities Once you have made your own profession, it's time to move on! You'd probably want it to be modifiable with commands. If you've worked with Mojang's Brigadier before, this shouldn't be a problem. Let's assume that we have created trader profession. We want to modify the payment item of our profession. TraderCommand.java public class TraderCommand { public static void register ( CommandDispatcher < CommandSourceStack > dispatcher , boolean dedicated ) { dispatcher . register ( literal ( \"trader\" ) . then ( literal ( \"changeCurrency\" ) . then ( argument ( \"currency item\" , ItemStackArgumentType . itemStack ()) . executes ( TraderCommand :: changeCurrency ) ) ) ); } private static int changeCurrency ( CommandContext < CommandSourceStack > context ) throws CommandSyntaxException { // Getting the selected Taterzen ServerPlayer player = context . getSource (). getPlayer (); TaterzenNPC npc = (( TaterzenEditor ) player ). getNpc (); if ( npc != null ) { // Getting the profession if NPC has it TraderProfession profession = npc . getProfession ( TraderProfession . ID ); if ( profession != null ) { ItemStack stack = ItemStackArgumentType . getItemStackArgument ( commandContext , \"currency item\" ); profession . editCurrency ( stack ); return 1 ; } // Otherwise send error player . sendMessage ( new TextComponent ( \"This npc doesn't have trader profession :'( ...\" ), false ); } else player . sendMessage ( noSelectedTaterzenError (), false ); return 0 ; } } Make sure to register your command as well.","title":"Profession Commands"},{"location":"professions/java/profession_commands/#expanding-profession-abilities","text":"Once you have made your own profession, it's time to move on! You'd probably want it to be modifiable with commands. If you've worked with Mojang's Brigadier before, this shouldn't be a problem. Let's assume that we have created trader profession. We want to modify the payment item of our profession. TraderCommand.java public class TraderCommand { public static void register ( CommandDispatcher < CommandSourceStack > dispatcher , boolean dedicated ) { dispatcher . register ( literal ( \"trader\" ) . then ( literal ( \"changeCurrency\" ) . then ( argument ( \"currency item\" , ItemStackArgumentType . itemStack ()) . executes ( TraderCommand :: changeCurrency ) ) ) ); } private static int changeCurrency ( CommandContext < CommandSourceStack > context ) throws CommandSyntaxException { // Getting the selected Taterzen ServerPlayer player = context . getSource (). getPlayer (); TaterzenNPC npc = (( TaterzenEditor ) player ). getNpc (); if ( npc != null ) { // Getting the profession if NPC has it TraderProfession profession = npc . getProfession ( TraderProfession . ID ); if ( profession != null ) { ItemStack stack = ItemStackArgumentType . getItemStackArgument ( commandContext , \"currency item\" ); profession . editCurrency ( stack ); return 1 ; } // Otherwise send error player . sendMessage ( new TextComponent ( \"This npc doesn't have trader profession :'( ...\" ), false ); } else player . sendMessage ( noSelectedTaterzenError (), false ); return 0 ; } } Make sure to register your command as well.","title":"Expanding profession abilities"}]}